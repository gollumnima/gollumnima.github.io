{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/wecode4_4TIL_grid_2","webpackCompilationHash":"283643e1df7aa2a40a0d","result":{"data":{"markdownRemark":{"id":"c7ba46a7-39a5-572d-9861-c5bd062fbc5e","html":"<p><img src=\"https://images.velog.io/post-images/dooreplay/096f8190-c704-11e9-8663-3d2ab0de90f3/image.png\" alt=\"image.png\"></p>\n<p>지난번 포스팅에 이어 썸네일은 Grid와 직접적인 관련이 있는 Wafers로..ㅎ\n웨하스는 일본식 발음이라고 하니 이제부턴 Wafer라는 말을 씁시다!\n여튼 시작!</p>\n<h2 id=\"fr\"><a href=\"#fr\" aria-label=\"fr permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fr</h2>\n<p>부분을 뜻하는 Fraction의 줄임말로, 정확한 픽셀값 대신 숫자+fr을 써주면 알아서 비율에 맞게 화면을 차지하게 된다! 올ㅋ</p>\n<p>html에서 상자를 네 개 만들고.. 아래와 같은 css 속성을 줘볼게요\n(1탄과 동일하게 scss파일입니다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$red: #ff5e57;\n$yellow: #ffdd59;\n$blue: #3c40c6;\n$green: #05c46b;\n.container {\n  display: grid;\n  grid-gap: 5px;\n  grid-auto-rows: 200px;\n  grid-template-columns: 1fr 2fr 3fr 4fr;\n  div:nth-child(even) {\n    background: $yellow;\n  }\n  div:nth-child(odd) {\n    background: $blue;\n  }\n}</code></pre></div>\n<p><code class=\"language-text\">grid-template-columns: 1fr 2fr 3fr 4fr;</code> 지금 grid-template-columns에 왼쪽과 같은 속성값을 줬는데요 어떤 결과가 나올까요! 두둥~</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/5c91a1d0-c706-11e9-836e-af72d1853ae5/image.png\" alt=\"image.png\"></p>\n<p>제일 첫번째 네모는 공간을 1fr만큼 차지해서 제일 작고, 제일 마지막 네모는 공간을 4fr만큼 차지하기 때문에 첫번째 네모의 4배가 됩니다.</p>\n<p>화면을 작게 줄여볼까요?</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/8b8a7930-c706-11e9-836e-af72d1853ae5/image.png\" alt=\"image.png\"></p>\n<p>그래도 여전히 width의 길이는 1,2,3,4배가 차이 나네요!\n이러면 우리가 width값을 따로 주지 않아도 화면에 꽉 차고, 비율대로 나오게 됩니다!</p>\n<h2 id=\"repeat\"><a href=\"#repeat\" aria-label=\"repeat permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>repeat()</h2>\n<p>자바스크립트 문법에서도 특정 string을 반복하게 해주는 repeat함수가 있었는데, CSS-grid의 성질 중에도 이런게 있습니다!\n괄호 안의 첫번째 인자엔 만들 개수, 두번째 인자엔 크기를 넣어주면 되는데요!</p>\n<p><code class=\"language-text\">grid-template-columns: repeat(1, 1fr);</code></p>\n<p>이 코드대로라면 columns이 1fr크기로 1개 생기겠죠? 이렇게..</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/064d3620-c708-11e9-a708-75a73d9428ef/image.png\" alt=\"image.png\"></p>\n<p>repeat으로 기둥을 만들어 준 후 옆에다 원하는 만큼 더 추가할 수도 있어요!\n예를 들어… <code class=\"language-text\">grid-template-columns: repeat(2, 1fr) 4fr;</code> 이런 코드는</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/7b54c690-c708-11e9-8663-3d2ab0de90f3/image.png\" alt=\"image.png\"></p>\n<p>이렇게!</p>\n<h2 id=\"auto-fill과-auto-fit\"><a href=\"#auto-fill%EA%B3%BC-auto-fit\" aria-label=\"auto fill과 auto fit permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>auto-fill과 auto-fit</h2>\n<p>위의 repeat함수에 auto-fill이라는 속성을 먼저 넣어볼게요. 이름만 들어도 뭔가 채워줄것 같지 않나요?</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/8fa81af0-c70a-11e9-b577-b17551845dee/image.png\" alt=\"image.png\"></p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/7e89c7f0-c70a-11e9-b577-b17551845dee/image.png\" alt=\"image.png\"></p>\n<p>실제로 보이는건 위의 그림이지만, 개발자도구 커서를 이용해서 확인해보면, 숨겨진 column들을 화면에 꽉 차게 만든것을 확인할 수 있습니다!</p>\n<p>auto-fit도 함 봅시다!\nauto-fi이 최대한으로 채우는거라면, auto-fit은 화면에 맞게 최대한 으로 공간을 차지하는 속성을 가지고 있어요.</p>\n<p>예시를 보기 전에 minmax에 대해 알아봅시다</p>\n<h2 id=\"minmax\"><a href=\"#minmax\" aria-label=\"minmax permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>minmax()</h2>\n<p>괄호 안 첫번째 인자엔 최소값, 두번째 인자엔 최대값이 들어가는 함수에요.\n최소값을 지정해줄 수 있으니까 반응형 페이지를 만들 때 좀 더 간단하게 만들 수 있겠죠?</p>\n<p>그럼 다시 auto-fit의 예시를 봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  grid-template-columns: repeat(auto-fit, minmax(200px, 4fr));\n  grid-template-rows: repeat(auo-fit, minmax(200px, 4fr));</code></pre></div>\n<p>최소값을 200px, 최대값을 4fr로 주면 아래와 같이</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/83480160-c70c-11e9-836e-af72d1853ae5/image.png\" alt=\"image.png\"></p>\n<p>이러한 화면이 나오게 되는데요!\n이 화면을 모바일 사이즈로 줄여보면…</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/8ffa47b0-c70c-11e9-836e-af72d1853ae5/image.png\" alt=\"image.png\"></p>\n<p>넘나 제가 원했던 화면이 나옵니다…\n이번 팀프로젝트때 메인 화면중 일부를 이런식으로 만들고 싶었는데!!\n이것만 있으면 flex에서 media query min값 따로 설정 안해줘도 되고 간편할듯!!!</p>\n<h2 id=\"justify-content\"><a href=\"#justify-content\" aria-label=\"justify content permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>justify-content</h2>\n<p>이거 어디서 많이 본 단어 아닌가요? 네 맞습니다~ flex box에 있던 속성인데 grid에서도 적용할 수 있어요. 가로 기준으로 정렬하는 방법입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.container {\n  display: grid;\n  grid-gap: 5px;\n  grid-auto-rows: 200px;\n  grid-template-columns: repeat(4, 100px);\n  justify-content: center;</code></pre></div>\n<p>부모 div에 위와 같은 값을 주면 결과는</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/9e6acde0-c70e-11e9-836e-af72d1853ae5/image.png\" alt=\"image.png\"></p>\n<p>이렇게 가운데로 오게 됩니다!\n그 밖에도 start, end 등이 있으니 MDN 같은 공식 문서 참고해보세용</p>\n<h2 id=\"align-content\"><a href=\"#align-content\" aria-label=\"align content permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>align-content</h2>\n<p>justify-content와는 반대로 세로 기준으로 정렬하는 방법이에요.\n그렇기 때문에 부모div에 높이값이 꼭 필요합니다!!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">align-content: center;\nheight: 100vh;</code></pre></div>\n<p>이렇게 해보면 결과는!!</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/34daab10-c714-11e9-836e-af72d1853ae5/image.png\" alt=\"image.png\"></p>\n<p>오.. 뭔가 핸드폰 배경화면 느낌쓰~ 맘에 드는 분들은 저장하셔도 됩니다 ㅋㅋㅋ</p>\n<h2 id=\"place-content\"><a href=\"#place-content\" aria-label=\"place content permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>place-content</h2>\n<p>위의 justify와 align을 합친 거라고 보면 될것 같은데요!\n첫번째론 align의 속성이, 두번째는 justify의 속성이 들어갑니다.\n페이지의 한 가운데인데 제일 밑에 상자를 위치시키고 싶다면..!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  place-content: end center;\n  height: 100vh;</code></pre></div>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/a43d1d20-c715-11e9-836e-af72d1853ae5/image.png\" alt=\"image.png\"></p>\n<p>식을 두 줄 쓸 필요도 없이 place-content 한 방이면 해결 완료~\n여기서 더 나아가서… 자식 div에 들어가는 값도 정렬을 해보려고 하는데요!\n위에서 했던 과정과 동일하게…</p>\n<h2 id=\"justify-items\"><a href=\"#justify-items\" aria-label=\"justify items permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>justify-items</h2>\n<p><code class=\"language-text\">justify-items: center;</code>\n<img src=\"https://images.velog.io/post-images/dooreplay/b36c06c0-c716-11e9-b577-b17551845dee/image.png\" alt=\"image.png\"></p>\n<h2 id=\"align-items\"><a href=\"#align-items\" aria-label=\"align items permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>align-items</h2>\n<p><code class=\"language-text\">align-items: center;</code>\n<img src=\"https://images.velog.io/post-images/dooreplay/9e069430-c716-11e9-836e-af72d1853ae5/image.png\" alt=\"image.png\"></p>\n<p>각각 정렬하면 이렇게 되는데… 한 방에 하는 방법이 또 있겠죠?\n네 맞습니다 ㅋㅋ</p>\n<h2 id=\"place-items\"><a href=\"#place-items\" aria-label=\"place items permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>place-items</h2>\n<p><code class=\"language-text\">place-items: center;</code>\n<img src=\"https://images.velog.io/post-images/dooreplay/151eb520-c717-11e9-8663-3d2ab0de90f3/image.png\" alt=\"image.png\"></p>\n<p>자식div에게 값을 따로 주지 않아도 부모div에서 알아서 다 설정하면 된다는게 넘 편한거 같고요?!\n포스팅이 또 길어지니 다음편에서 계속됩니다</p>\n<h2 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li><a href=\"https://www.w3schools.com/css/css_grid.asp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.w3schools.com/css/css_grid.asp</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Grid_Layout/Basic_concepts_of_grid_layout\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Grid_Layout/Basic_concepts_of_grid_layout</a></li>\n<li><a href=\"https://www.freecodecamp.org/news/learn-css-grid-in-5-minutes-f582e87b1228/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.freecodecamp.org/news/learn-css-grid-in-5-minutes-f582e87b1228/</a></li>\n<li><a href=\"https://scrimba.com/p/pWqLHa/c7Jqdfa\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://scrimba.com/p/pWqLHa/c7Jqdfa</a></li>\n</ul>","fields":{"slug":"/posts/wecode4_4TIL_grid_2","tagSlugs":["/tag/wecode/","/tag/codingbootcamp/","/tag/grid/","/tag/css/","/tag/위코드/"]},"frontmatter":{"date":"2019-08-22T19:45:04.169Z","description":"위코드 23일차. 프로젝트에 앞서 css 속성 중 grid에 대해서 공부해보았다, 그 2탄!","tags":["wecode","codingbootcamp","grid","css","위코드"],"title":"wecode 4주차_4일 TIL_CSS Grid로 레이아웃을 짜보자 2탄"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/wecode4_4TIL_grid_2"}}}