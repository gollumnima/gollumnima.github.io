{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/wecode8_1TIL_react_switchingTab","webpackCompilationHash":"025f0021a51f9a3e2b8d","result":{"data":{"markdownRemark":{"id":"77c72d21-b18b-5194-85bf-16b816bb77f4","html":"<p><img src=\"https://images.velog.io/post-images/dooreplay/0f8a3690-dab6-11e9-b89c-ad3a038b9fd8/image.png\" alt=\"image.png\"></p>\n<p>오늘 점심먹고서부터 시작된 나의 삽질은 저녁먹기 바로 직전에 끝이 났다ㅋㅋ\n탭이동 하는 로직은 안 쓰는 사이트가 없기 때문에 꼭 알아야하는 로직이다!\n삽질을 꽤나 오래하긴 했지만 일단 정리를 해야 까먹지 않을것 같아서 정리 시작!</p>\n<h2 id=\"첫-번째-도전\"><a href=\"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%EB%8F%84%EC%A0%84\" aria-label=\"첫 번째 도전 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>첫 번째 도전…</h2>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/a16da010-dab6-11e9-b89c-ad3a038b9fd8/image.png\" alt=\"image.png\"></p>\n<p>일단 컴포넌트를 쪼개서 각 탭을 눌렀을 때마다 오른쪽 화면에 보이는 구성을 다르게 하려고 했다.\n그래서 써본 것..\n먼저 render함수 전에 switching이라는 함수를 만들었다.\n더 전엔 constructor 안에 <code class=\"language-text\">this.state={rightbox:0}</code> 이라고 선언해줬다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//switching 함수\n  switching = e =&gt; {\n    if (e.target.key === 0) {\n      this.setState({ rightbox: 0 });\n    } else if (e.target.key === 1) {\n      this.setState({ rightbox: 1 });\n    } else {\n      this.setState({ rightbox: 2 });\n    }\n  };</code></pre></div>\n<p>그러고 나서 적용했던 것이 <code class=\"language-text\">&lt;AdRight&gt;</code>라는 div 내부에 컴포넌트를 불러오는 조건문을 넣고,\n<code class=\"language-text\">&lt;AdSideLi&gt;</code>에 <code class=\"language-text\">this.switching</code>이라는 함수를 실행했다.\n이렇게.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;ModalBackground&gt;\n        &lt;ModalWrapper&gt;\n          &lt;TitleWrapper&gt;\n            &lt;TitleLetters&gt;Adwards&lt;/TitleLetters&gt;\n          &lt;/TitleWrapper&gt;\n          &lt;AdVideoWrapper&gt;\n            &lt;AdLeft&gt;\n              &lt;AdSideUL&gt;\n                &lt;AdSideLI\n                  onClick={this.switching}\n                &gt;\n                  &lt;Span&gt;광고 영상 업로드&lt;/Span&gt;\n                &lt;/AdSideLI&gt;\n                &lt;AdSideLI\n                  onClick={this.switching}\n                &gt;\n                  &lt;Span&gt;퀴즈 업로드&lt;/Span&gt;\n                &lt;/AdSideLI&gt;\n                &lt;AdSideLI\n                  onClick={this.switching}\n                &gt;\n                  &lt;Span&gt;금액 설정&lt;/Span&gt;\n                &lt;/AdSideLI&gt;\n              &lt;/AdSideUL&gt;\n            &lt;/AdLeft&gt;\n            &lt;AdRight&gt;\n               {this.state.rightbox === 0 ? (\n                &lt;AdVideoForm /&gt;\n              ) : this.state.rightbox === 1 ? (\n                &lt;AdQuizForm /&gt;\n              ) : (\n                &lt;AdMoney /&gt;\n              )}\n            &lt;/AdRight&gt;\n          &lt;/AdVideoWrapper&gt;\n          &lt;CloseOK&gt;\n            &lt;CloseLetter cancel&gt;취소&lt;/CloseLetter&gt;\n            &lt;CloseLetter&gt;확인&lt;/CloseLetter&gt;\n          &lt;/CloseOK&gt;\n        &lt;/ModalWrapper&gt;\n      &lt;/ModalBackground&gt;</code></pre></div>\n<p>결과는 대 실패!\n여러가지 이유가 있지만 일단은 this.state.rightbox가 제대로 돌지 않아 2만 찍혔고…\nonClick에도 잘못된 함수를 넣었고, switching이라는 함수도 조건이 이상하다!</p>\n<h2 id=\"2차-시도\"><a href=\"#2%EC%B0%A8-%EC%8B%9C%EB%8F%84\" aria-label=\"2차 시도 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2차 시도</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Switching = e =&gt; {\n    this.setState({ rightbox: e.currentTarget.id });\n}</code></pre></div>\n<p>일단 switching이라는 함수를 이런식으로 변형하고..\nrender 이후에 subView라는 배열을 선언해서 컴포넌트를 그 배열안에 넣고 인덱스 값으로 불러왔다.\n이렇게..</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 이건 subView 배열\nlet subView = [&lt;AdVideoForm /&gt;, &lt;AdQuizForm /&gt;, &lt;AdMoneyForm /&gt;];</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 이건 onClick 걸어준 태그\n&lt;AdSideLI id=&quot;0&quot; onClick={this.Switching}&gt;\n&lt;AdSideLI id=&quot;1&quot; onClick={this.Switching}&gt;\n&lt;AdSideLI id=&quot;2&quot; onClick={this.Switching}&gt;</code></pre></div>\n<p>그러고 나선 <code class=\"language-text\">&lt;AdRight&gt;</code>이라는 div 안에 다음과 같은 조건을 넣어주었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{subView[this.state.rightbox]}</code></pre></div>\n<p>이렇게 하면 탭 이동은 잘 되긴 한다!1\n근데 나는 여전히 탭의 색깔을 바꿀수 없었고..\n제일 큰 문제는.. react 세상에선 id값을 잘 안준다는 점!!!\nid 자체가 고유한 값이라 리액트의 장점 중 하나인 재사용성이라는 성질에 맞지 않기 때문이다.</p>\n<p>그래서 바꾼 코드는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class ModalForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activeTab: &quot;videoTab&quot;\n    };\n  }\n\n  switchMenu = activeTab =&gt; {\n    this.setState({ activeTab: activeTab });\n  };\n\n  render() {\n    let subView = [\n      { videoTab: &lt;AdVideoForm key=&quot;0&quot; /&gt; },\n      { quizTab: &lt;AdQuizForm key=&quot;1&quot; /&gt; },\n      { priceTab: &lt;AdMoneyForm key=&quot;2&quot; /&gt; }\n    ];\n\n    console.log(this.props.activeTab, &quot;액티브&quot;);\n    return (\n      &lt;ModalBackground&gt;\n        &lt;ModalWrapper&gt;\n          &lt;TitleWrapper&gt;\n            &lt;TitleLetters&gt;Adwards&lt;/TitleLetters&gt;\n          &lt;/TitleWrapper&gt;\n          &lt;AdVideoWrapper&gt;\n            &lt;AdLeft&gt;\n              &lt;AdSideUL&gt;\n                &lt;AdSideLI\n                  active={this.state.activeTab === &quot;videoTab&quot;}\n                  onClick={() =&gt; this.switchMenu(&quot;videoTab&quot;)}\n                &gt;\n                  &lt;Span&gt;광고 영상 업로드&lt;/Span&gt;\n                &lt;/AdSideLI&gt;\n                &lt;AdSideLI\n                  active={this.state.activeTab === &quot;quizTab&quot;}\n                  onClick={() =&gt; this.switchMenu(&quot;quizTab&quot;)}\n                &gt;\n                  &lt;Span&gt;퀴즈 업로드&lt;/Span&gt;\n                &lt;/AdSideLI&gt;\n                &lt;AdSideLI\n                  active={this.state.activeTab === &quot;priceTab&quot;}\n                  onClick={() =&gt; this.switchMenu(&quot;priceTab&quot;)}\n                &gt;\n                  &lt;Span&gt;금액 설정&lt;/Span&gt;\n                &lt;/AdSideLI&gt;\n              &lt;/AdSideUL&gt;\n            &lt;/AdLeft&gt;\n            &lt;AdRight&gt;\n              {subView.map((el, key) =&gt; {\n                el.key = key;\n                return el[this.state.activeTab];\n              })}\n            &lt;/AdRight&gt;\n          &lt;/AdVideoWrapper&gt;\n          &lt;CloseOK&gt;\n            &lt;CloseLetter cancel&gt;취소&lt;/CloseLetter&gt;\n            &lt;CloseLetter&gt;확인&lt;/CloseLetter&gt;\n          &lt;/CloseOK&gt;\n        &lt;/ModalWrapper&gt;\n      &lt;/ModalBackground&gt;\n    );\n  }\n}</code></pre></div>\n<h2 id=\"state값-변경\"><a href=\"#state%EA%B0%92-%EB%B3%80%EA%B2%BD\" aria-label=\"state값 변경 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>state값 변경</h2>\n<p>일단 state 안에 <code class=\"language-text\">activeTab: &quot;videoTab&quot;</code>이라고 디폴트값을 광고업로드 컴포넌트로 설정을 해주었고\nswitching 함수도 변형을 해주었다.</p>\n<h2 id=\"swtich-함수-변경\"><a href=\"#swtich-%ED%95%A8%EC%88%98-%EB%B3%80%EA%B2%BD\" aria-label=\"swtich 함수 변경 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>swtich 함수 변경</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  switchMenu = activeTab =&gt; {\n    this.setState({ activeTab: activeTab });\n  };</code></pre></div>\n<ol>\n<li>이름을 동사+명사로 바꾸기(Switching -> switchMenu)</li>\n<li>state객체안의 key값인 activeTab의 value를 setState를 이용해 함수의 인자로 바꾸어주기</li>\n</ol>\n<p>인자도, 키값도, value도 다 activeTab이라서 헷갈릴 수도 있다.\n그럼 이름을 바꿔보자!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> switchMenu = icecreawm =&gt; {\n    this.setState({ activeTab: icecream });\n  };</code></pre></div>\n<p>이렇게 바꿔줘도 아주 잘 불러와진다.</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/31b8c970-dacf-11e9-a0aa-4de6814e1f34/image.png\" alt=\"image.png\"></p>\n<p>오늘은 글이 너무 많은것 같으니 아이스크림짤 투척!\n절대 내가 먹고싶어서 그런게 아니다. 정말이다!</p>\n<p>여튼… 다시 이어서!!!!</p>\n<p>컴포넌트를 불러오는 평범한 배열 subView를 객체를 가진 배열로 변형도 했다.</p>\n<h2 id=\"자식-컴포넌트-불러오는-배열-변경\"><a href=\"#%EC%9E%90%EC%8B%9D-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%B6%88%EB%9F%AC%EC%98%A4%EB%8A%94-%EB%B0%B0%EC%97%B4-%EB%B3%80%EA%B2%BD\" aria-label=\"자식 컴포넌트 불러오는 배열 변경 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자식 컴포넌트 불러오는 배열 변경</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> let subView = [\n      { videoTab: &lt;AdVideoForm key=&quot;0&quot; /&gt; },\n      { quizTab: &lt;AdQuizForm key=&quot;1&quot; /&gt; },\n      { priceTab: &lt;AdMoneyForm key=&quot;2&quot; /&gt; }\n    ];</code></pre></div>\n<p>이 때 주의사항!</p>\n<ul>\n<li>배열 안의 객체의 value를 불러와야 하기 때문에 아래서 map을 돌려야 한다.</li>\n<li>map을 돌려야 해서 jsx 내부에 고유의 key값을 설정해주어야 한다.</li>\n</ul>\n<h2 id=\"클릭이-되는-왼쪽-탭-안의-태그-조건-변경\"><a href=\"#%ED%81%B4%EB%A6%AD%EC%9D%B4-%EB%90%98%EB%8A%94-%EC%99%BC%EC%AA%BD-%ED%83%AD-%EC%95%88%EC%9D%98-%ED%83%9C%EA%B7%B8-%EC%A1%B0%EA%B1%B4-%EB%B3%80%EA%B2%BD\" aria-label=\"클릭이 되는 왼쪽 탭 안의 태그 조건 변경 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클릭이 되는 왼쪽 탭 안의 태그 조건 변경</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">            &lt;AdLeft&gt;\n              &lt;AdSideUL&gt;\n                &lt;AdSideLI\n                  active={this.state.activeTab === &quot;videoTab&quot;}\n                  onClick={() =&gt; this.switchMenu(&quot;videoTab&quot;)}\n                &gt;\n                  &lt;Span&gt;광고 영상 업로드&lt;/Span&gt;\n                &lt;/AdSideLI&gt;\n                &lt;AdSideLI\n                  active={this.state.activeTab === &quot;quizTab&quot;}\n                  onClick={() =&gt; this.switchMenu(&quot;quizTab&quot;)}\n                &gt;\n                  &lt;Span&gt;퀴즈 업로드&lt;/Span&gt;\n                &lt;/AdSideLI&gt;\n                &lt;AdSideLI\n                  active={this.state.activeTab === &quot;priceTab&quot;}\n                  onClick={() =&gt; this.switchMenu(&quot;priceTab&quot;)}\n                &gt;\n                  &lt;Span&gt;금액 설정&lt;/Span&gt;\n                &lt;/AdSideLI&gt;\n              &lt;/AdSideUL&gt;\n            &lt;/AdLeft&gt;</code></pre></div>\n<ul>\n<li>css에서 background-color 변경을 위한 조건. 이건 아래에서 다시 살펴보자\n<code class=\"language-text\">AdSideLi</code>태그에 active라는 props값을 주고,\n그 props가 this.state.activeTab이 각각의 activeTab이</li>\n<li>state 변경을 위한 조건\nonClick 안에 함수선언을 해주었다. 호출 말고 선언!!\n함수의 호출은 브라우저가 하는거기 때문에 우리가 미리 호출해버리면 안된다!</li>\n</ul>\n<p>함수의 괄호 안에는 subView 함수에 내장되어있는 객체들의 key값을 넣어주었고,\nswitchMenu라는 함수 자체가 parameter로 받는 값이 곧 activeTab이 되는 함수라서 state값이 각각 “videoTab”, “quizTab”, “priceTab” 으로 변경 되는것이다…\n와우…넘나 신기해 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ</p>\n<h2 id=\"소환-되는-자식컴포넌트가-들어갈-div안의-조건식-변경\"><a href=\"#%EC%86%8C%ED%99%98-%EB%90%98%EB%8A%94-%EC%9E%90%EC%8B%9D%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EA%B0%80-%EB%93%A4%EC%96%B4%EA%B0%88-div%EC%95%88%EC%9D%98-%EC%A1%B0%EA%B1%B4%EC%8B%9D-%EB%B3%80%EA%B2%BD\" aria-label=\"소환 되는 자식컴포넌트가 들어갈 div안의 조건식 변경 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소환 되는 자식컴포넌트가 들어갈 div안의 조건식 변경</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">            &lt;AdRight&gt;\n              {subView.map((el, key) =&gt; {\n                el.key = key;\n                return el[this.state.activeTab];\n              })}\n            &lt;/AdRight&gt;</code></pre></div>\n<p>subView는 객체가 아닌 배열! 객체를 품은 배열이다.\n그래서 el값의 activeTab을 불러오도록 했고..\nkey를 넣어주지 않아도 되긴 하지만 개발자 도구에 빨간색으로 경고가 뜬다.\n경고 받으면 무서우니까 넣어주자. 이 작업을 위해 컴포넌트 태그 안에 key를 넣어주었다!</p>\n<h2 id=\"css에서-props를-통해-탭-이동시-탭-배경색깔-바꾸기\"><a href=\"#css%EC%97%90%EC%84%9C-props%EB%A5%BC-%ED%86%B5%ED%95%B4-%ED%83%AD-%EC%9D%B4%EB%8F%99%EC%8B%9C-%ED%83%AD-%EB%B0%B0%EA%B2%BD%EC%83%89%EA%B9%94-%EB%B0%94%EA%BE%B8%EA%B8%B0\" aria-label=\"css에서 props를 통해 탭 이동시 탭 배경색깔 바꾸기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS에서 props를 통해 탭 이동시 탭 배경색깔 바꾸기</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const AdSideLI = styled.li`\n  display: flex;\n  padding-right: 24px;\n  font-size: 15px;\n  margin: 30px 0;\n  background-color: ${props =&gt; (props.active ? `#E2E2E2` : null)};\n`;</code></pre></div>\n<p>bgcolor를 바꿔줄건데.. props.active가 true일 경우 회색깔로 바꿔줄거다.\n그렇다면 true와 false를 가르게 위한 조건은 뭐였을까! 바로 이거다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">active={this.state.activeTab === &quot;videoTab&quot;}\nactive={this.state.activeTab === &quot;quizTab&quot;}\nactive={this.state.activeTab === &quot;priceTab&quot;}</code></pre></div>\n<p>각각의 <code class=\"language-text\">&lt;AdSideLi&gt;</code> 태그 안의 값이다. 전체식은 아까 위에서 썼다~ 참고쓰~~\n클릭을 할때마다 state객체의 activeTab이 바뀌게 되는데\n이렇게 설정해주면 클릭할때만 클릭한 탭의 activeTab이 true가 나오기 때문에 css 조건에서의 삼항연산자가 true가 나오게 되서 색깔이 바뀐다.</p>\n<p>조건이 2개까진 괜찮았는데 3개가 되서 좀 헤맸는데 이제 좀 이해가 갔다!!!!\n다음번 탭 이동 로직 구할땐 지금처럼 크나큰 삽질은 안할것 같다 ㅋㅋㅋㅋ</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/6f46e280-dad0-11e9-a542-5f7fbd479e5b/image.png\" alt=\"image.png\"></p>\n<p>어쨌든 지금은 적용 잘 된다는점!\ncss는 나중에 손볼거다… 기능 구현할게 넘나 많닼ㅋㅋㅋ\n2차 프로젝트 화이팅하자 둘둘!!!</p>\n<h2 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li>예리멘토님 미니 세션 ♥</li>\n</ul>","fields":{"slug":"/posts/wecode8_1TIL_react_switchingTab","tagSlugs":["/tag/wecode/","/tag/codingbootcamp/","/tag/react/","/tag/css/","/tag/위코드/"]},"frontmatter":{"date":"2019-09-16T20:29:23.169Z","description":"위코드 49일차. 어차피 주말에도 매일 나오니까 인제 주말까지 포함해서 세기로 마음먹었다ㅋㅋ 리액트에서 탭 이동하면 각 탭별 화면이 구현되고, 또 선택한 탭의 색깔이 바뀌는 로직을 짜보았다!","tags":["wecode","codingbootcamp","react","css","위코드"],"title":"wecode 8주차_1일 TIL_리액트에서 탭 이동 및 선택한 탭 색깔 칠하기"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/wecode8_1TIL_react_switchingTab"}}}