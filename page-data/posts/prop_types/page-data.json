{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/prop_types","webpackCompilationHash":"458b405b709d8c919f0e","result":{"data":{"markdownRemark":{"id":"4aad99c8-5a9e-5196-b1f0-1da2ba757cde","html":"<p><img src=\"https://images.velog.io/post-images/dooreplay/f7498f10-0e7f-11ea-ae3e-b5d32084644b/image.png\" alt=\"image.png\"></p>\n<p>정적언어에서 Type을 체크하는 것처럼, React에서도 타입을 체크해볼 수 있다.\n바로바로 prop-types를 이용하는 것!</p>\n<p>이게 귀찮은 작업이긴 해도, 일단 써보면 좋은 이유?</p>\n<ul>\n<li>코드 가독성 굿굿</li>\n<li>디버깅 굿굿</li>\n</ul>\n<h2 id=\"설치\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h2>\n<p>yarn이나 npm을 이용해 prop-types 패키지를 설치해준다.</p>\n<h2 id=\"사용\"><a href=\"#%EC%82%AC%EC%9A%A9\" aria-label=\"사용 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용</h2>\n<ol>\n<li>import 하기! <br />\n여타 다른 패키지들과 동일하게 import해서 쓸 수 있다.\n<code class=\"language-text\">import PropTypes from &quot;prop-types&quot;;</code></li>\n<li>타입 체크</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) =&gt; (\n// 중략\n);\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};</code></pre></div>\n<p>함수형 컴포넌트에서는 인자로 들어가는 값들을 그 함수 아래에서 타입 체크 해줄수 있다.<br />\n클래스형에서도 마찬가지로 props로 넘김받는 값들의 타입을 체크 해주면 된다.</p>\n<h2 id=\"어떤-타입들이-있을까\"><a href=\"#%EC%96%B4%EB%96%A4-%ED%83%80%EC%9E%85%EB%93%A4%EC%9D%B4-%EC%9E%88%EC%9D%84%EA%B9%8C\" aria-label=\"어떤 타입들이 있을까 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어떤 타입들이 있을까?</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  optionalArray: PropTypes.array,\n  optionalBool: PropTypes.bool,\n  optionalFunc: PropTypes.func,\n  optionalNumber: PropTypes.number,\n  optionalObject: PropTypes.object,\n  optionalString: PropTypes.string,\n  optionalSymbol: PropTypes.symbol,\n\n\n  optionalNode: PropTypes.node,\n\n  optionalElement: PropTypes.element,\n\n  optionalMessage: PropTypes.instanceOf(Message),\n\n  optionalEnum: PropTypes.oneOf([&#39;News&#39;, &#39;Photos&#39;]),\n\n  optionalUnion: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.instanceOf(Message)\n  ]),\n\n  optionalArrayOf: PropTypes.arrayOf(PropTypes.number),\n\n  optionalObjectOf: PropTypes.objectOf(PropTypes.number),\n\n  optionalObjectWithShape: PropTypes.shape({\n    color: PropTypes.string,\n    fontSize: PropTypes.number\n  }),\n\n  requiredFunc: PropTypes.func.isRequired,\n\n  requiredAny: PropTypes.any.isRequired,</code></pre></div>\n<p>자바스크립트의 원시타입 뿐만 아니라 다양하게 타입을 체크해볼 수 있는데<br />\nshape이나 oneOfType 같은것도 설정해볼 수 있고…<br />\nCustom으로 타입을 체크해볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">customProp: function(props, propName, componentName) {\n    if (!/matchme/.test(props[propName])) {\n      return new Error(\n        &#39;Invalid prop `&#39; + propName + &#39;` supplied to&#39; +\n        &#39; `&#39; + componentName + &#39;`. Validation failed.&#39;\n      );\n    }\n  },\n\ncustomArrayProp: PropTypes.arrayOf(function(propValue, key, componentName, location, propFullName) {\n    if (!/matchme/.test(propValue[key])) {\n      return new Error(\n        &#39;Invalid prop `&#39; + propFullName + &#39;` supplied to&#39; +\n        &#39; `&#39; + componentName + &#39;`. Validation failed.&#39;\n      );\n    }\n  })</code></pre></div>\n<p>요런 식으로..!<br />\n공식문서에 있는걸 긁어온거고.. 아직까지 써본적은 없다.ㅋㅋㅋ</p>\n<h2 id=\"isrequired\"><a href=\"#isrequired\" aria-label=\"isrequired permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>isRequired</h2>\n<p>필수로 있어야 하는 값에는 가장 끝에 isRequired를 붙여준다.<br />\nisRequired라고 써준 값이 비어있다면 에러 발생!</p>\n<h2 id=\"예시\"><a href=\"#%EC%98%88%EC%8B%9C\" aria-label=\"예시 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h2>\n<p>노마드 강의를 보다 보면 prop-types를 필수적으로 쓰는 것 같다.<br />\n코드를 쓰는 좋은 습관쓰~? 😎<br /></p>\n<p>많고 많은 컴포넌트 중에 골라온 Section Component</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React from &quot;react&quot;;\nimport PropTypes from &quot;prop-types&quot;;\nimport styled from &quot;styled-components&quot;;\n\nconst Container = styled.div`\n  margin-bottom: 50px;\n  :not(:last-chile) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 25px;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  margin-top: 25px;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) =&gt; (\n  &lt;Container&gt;\n    &lt;Title&gt;{title}&lt;/Title&gt;\n    &lt;Grid&gt;{children}&lt;/Grid&gt;\n  &lt;/Container&gt;\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node])\n};\n\nexport default Section;</code></pre></div>\n<p>React 공식문서 보면서 PropTypes에 node를 써주는것 보고 넘 신기했는데..<br />\n이미 니꼬가 강의에서 썼었네??<br />\n근데 난 기억이 안나네?? 강의 다시 들어야겠네?? 😂😂<br /></p>\n<p>급히 끝내보기.. 출처는 리액트 공식문서다.</p>\n<h2 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li><a href=\"https://reactjs-kr.firebaseapp.com/docs/typechecking-with-proptypes.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://reactjs-kr.firebaseapp.com/docs/typechecking-with-proptypes.html</a></li>\n</ul>","fields":{"slug":"/posts/prop_types","tagSlugs":["/tag/web/","/tag/frontend/","/tag/react/"]},"frontmatter":{"date":"2019-11-24T17:37:23.169Z","description":"정적언어에서 쓰이는 Type Check.. 리액트에서도 쓸 수 있다??? 바로 바로 prop-types를 이용해서! 오늘은 prop-types를 이용해 타입을 체크하는 법에 대해 간단히 알아보고자 한다.","tags":["web","frontend","react"],"title":"리액트에서 prop-types이용해서 타입 체크해보기"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/prop_types"}}}