{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/wecode11_2TIL_Num","webpackCompilationHash":"904934329d42a9e48021","result":{"data":{"markdownRemark":{"id":"1ff33dc5-513b-5799-b3cf-f45a120ceb54","html":"<p><img src=\"https://images.velog.io/post-images/dooreplay/92e20700-ea3a-11e9-afe6-196b0b97fa8e/image.png\" alt=\"image.png\"></p>\n<h2 id=\"number\"><a href=\"#number\" aria-label=\"number permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Number</h2>\n<p>자바스크립트에서 Number란 64bit floating point로 이루어진 숫자형 데이터이다.<br />\n정수, 소수 다 Number가 되지만 infinity나 NaN 또한 Number이다!<br />\ninfinity와 NaN에 대해서 더 알아보자!</p>\n<h2 id=\"nan\"><a href=\"#nan\" aria-label=\"nan permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NaN</h2>\n<p>말 그대로 Not a Number. 숫자가 아니라는 뜻!!\n위코드 예시 문제에서 NaN을 리턴하라는 문제가 있어서 도전도전</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function returnNaN() {\n  return 3/&#39;가&#39;;\n}</code></pre></div>\n<p>문제의 예시 해답은 이렇게 주어졌지만 나는 꼼수를 써서</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function returnNaN() {\n  return NaN;\n}</code></pre></div>\n<p>그냥 NaN이 리턴되게 했다 ㅋㅋㅋㅋㅋㅋ<br />\n가끔 개발자의 실수로 웹페이지에서 금액 대신 NaN이 뜨는 에러를 볼 수 있다.\n<br /></p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/2df2b950-ea3c-11e9-b595-afef7cf6fa1e/image.png\" alt=\"image.png\"></p>\n<p>이렇게 ㅋㅋㅋㅋㅋㅋㅋ<br />\n아니 계산을 어떻게 하라는건가욧ㅋㅋ\n여튼.. MDN 문서의 내용을 덧붙이자면..!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">NaN === NaN;        // false\nisNaN(NaN);         // true</code></pre></div>\n<p>NaN과 NaN은 같을 수 없고.. isNaN으로 NaN인지 여부를 확인가능쓰\nNaN과 숫자의 연산을 해보면 어떨까?\na는 양의 정수이고, b는 NaN이다.</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/3c7f5d90-ea3f-11e9-872c-41fe4572e8d5/image.png\" alt=\"image.png\"></p>\n<p>음의 정수로 시도해봐도 똑같다.<br />\n무조건 NaN과의 연산을 통해 NaN이 나오게 된다!</p>\n<p>이제 infinity로 넘어가자!<br />\n내꺼하자 ha~ 의 인피니티 말고 무한대 인피니티!</p>\n<h2 id=\"infinity\"><a href=\"#infinity\" aria-label=\"infinity permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Infinity</h2>\n<p>아까 NaN에서도 생략했지만, NaN과 Infinity는 전역객체의 속성이다.<br />\n그 말은 즉슨, 우리가 window에 이미 저장되어있는 값이기 때문에 console.log를 찍었을때 그 값이 바로 나온다는 사실!</p>\n<p>또한.. NaN과는 조금 다르게 Infinity를 이용해 NaN보단 약간 더 다양한 연산이 가능하다는 사실..!</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/a935ad50-ea3e-11e9-b6ee-7fe3815f8a47/image.png\" alt=\"image.png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Infinity * 양의정수 === Infinity\nInfinity / 양의정수 === Infinity\n양의정수 / Infinity === 0\nInfinity * 음의정수 === -Infinity\nInfinity / 음의정수 === -Infinity\n음의정수 / Infinity === -0</code></pre></div>\n<p>-0은… 뭔지 모르겠다..\n수학전공인 울 언니한테 물어봐야겠다!ㅋㅋㅋㅋ</p>\n<p>여튼.. 위코드에서 준 문제는 더치페이 문제!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function dutch(count, price) {\n  const dutchMoney = price/count;\n  if (Number.isInteger(dutchMoney)) {\n    return dutchMoney\n  }\n  else if (dutchMoney+1 === Infinity) {\n    return 0\n  }\n  else {\n    return +dutchMoney.toFixed(2)\n  }\n}</code></pre></div>\n<p>나는 이 문제를 정수인지, infinity인지, 소수인지로 나눠서 생각해보았다!<br />\n소수일 경우 소수 셋째자리에서 반올림을 해서 자릿수를 두개로 맞춰야하는데.. <br />찾아보니 toFixed()라는 함수가 있는것!</p>\n<h4 id=\"tofixed\"><a href=\"#tofixed\" aria-label=\"tofixed permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>toFixed()</h4>\n<ul>\n<li>숫자를 괄호안의 수 만큼의 자릿수를 갖는 숫자로 변형</li>\n<li>괄호안에 숫자가 안들어가면 디폴트값이 0</li>\n<li>소수점이 길면 반올림하고, 짧으면 0으로 채운다</li>\n</ul>\n<p>위의 코드에서 +dutchMoney라고 해준 이유는 Number(dutchMoney) 대신 뒤에 남는 0을 지워주기 위함ㅋㅋ\n근데 모델솔루션을 보고 또 깜놀…</p>\n<p>모델솔루션의 해답..</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function dutch(count, price) {\n  let result = price/count;\n\n  if (!isFinite(result)) return 0;\n\n  return Number((price/count).toFixed(2));\n}</code></pre></div>\n<p>isFinite로 일단 무한대인지 판별을 하고..\n소수인지 정수인지 판별할 필요없이 숫자의 뒤에는 toFixed, 앞에는 Number로 쓰면\n소수일땐 소수점 두 자리만 남기고, 정수일땐 알아서 정수로 변형시켜 줄 수있다.</p>\n<p>간단한 문제였는데 한번도 깊이 생각해보지 못했던 Infinity와 NaN에 대해 생각해보고 좋았다!</p>","fields":{"slug":"/posts/wecode11_2TIL_Num","tagSlugs":["/tag/wecode/","/tag/codingbootcamp/","/tag/javascript/","/tag/위코드/"]},"frontmatter":{"date":"2019-10-08T12:54:23.169Z","description":"위코드 71일차. 끝나지 않은 Next.js 초기 세팅 포스팅.. 그래서 오늘은 또 위코드에서 던져준 자바스크립트 문제에 대해 정리해보았다. 오늘은 그 두 번째 단계, Number의 값 중 Infinity와 NaN에 대해 정리해보았다!","tags":["wecode","codingbootcamp","javascript","위코드"],"title":"wecode 11주차_2일 TIL_JS에서 Number의 값 중 infinity와 NaN에 대해 알아보자"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/wecode11_2TIL_Num"}}}