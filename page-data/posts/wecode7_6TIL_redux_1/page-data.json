{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/wecode7_6TIL_redux_1","webpackCompilationHash":"de91277daf84bfa90327","result":{"data":{"markdownRemark":{"id":"dc23989b-ceb2-53a5-9605-98248644ca57","html":"<h2 id=\"redux\"><a href=\"#redux\" aria-label=\"redux permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux</h2>\n<p>Redux는 state를 관리해주는 라이브러리다.\n일단 로직은 이러하다</p>\n<p><code class=\"language-text\">Action Creator → Action → Dispatch → Reducers → State</code></p>\n<p>각각의 요소들이 무엇인지 파악하기 이전에\n보험회사에 보험금을 청구하는 과정으로 Redux를 이해해보자!\n해당 내용은 Udemy Modern React with Redux 라는 강의를 듣고 적어보았다.</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/817089c0-d698-11e9-8270-13e33fe5a10a/image.png\" alt=\"image.png\"></p>\n<p>보험회사에 보험금을 청구하는 과정을 살펴보자면…</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">고객이 보험회사에 영수증 제출 → 영수증전달 → 접수직원이 받음 → 해당부서로 넘김 → 고객정보 확인 후 보험금 지급</code></pre></div>\n<p>인데… 위의 Redux의 과정과 동일하다고 보면 된다!\n이걸 코드로 써보자.</p>\n<p>codepen의 js탭을 눌른다음 Redux 선택하고 코드를 적으면 된다.\n코드를 다 치고나서 결과는 개발자도구의 콘솔창에서 확인할 수 있다!</p>\n<h2 id=\"action-creator--action\"><a href=\"#action-creator--action\" aria-label=\"action creator  action permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Action Creator &#x26; Action</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 고객이 영수증 제출\nconst createPolicy = (name, amount) =&gt; {\n  return {\n    // Action\n    type: &#39;CREATE_POLICY&#39;, // Action에는 꼭 type이 있어야함.\n    payload: { // 영수증 세부내역\n      name: name,\n      amount: amount\n    }\n  };\n};\n\n// 보험회사에서 고객정보 삭제\nconst deletePolicy = (name) =&gt; {\n  return {\n    type: &#39;DELETE_POLICY&#39;,\n    payload : {\n      name: name\n    }\n  };\n};\n\n// 보험회사에서 고객에게 보험금 지급\nconst createClaim = (name, amountOfMoneyToCollect) =&gt; {\n  return {\n    type: &#39;CREATE_CLAIM&#39;,\n    payload: {\n      name: name,\n      amountOfMoneyToCollect : amountOfMoneyToCollect\n    }\n  };\n};</code></pre></div>\n<h2 id=\"reducers\"><a href=\"#reducers\" aria-label=\"reducers permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reducers</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 보험급 지금내역\n// parameter 내부에서 default값은 빈 배열로 선언해준다.\nconst claimHistory = (oldListOfClaims = [], action) =&gt; {\n  if (action.type === &#39;CREATE_CLAIM&#39;) {\n    return [...oldListOfClaims, action.payload];\n    //old에 새로 들어온 action.payload를 push하는 과정\n    //reducer 안에 push를 쓰면 안된다!\n  }\n  return oldListOfClaims;\n};\n\n// 보험회사가 가지고 있는 총 자산\n// bagOfMoney의 default 값은 100으로 주었다.\nconst accounting = (bagOfMoney = 100, action) =&gt; {\n  if (action.type === &#39;CREATE_CLAIM&#39;) {\n  // 고객이 보험금 청구시 보험회사 자산에서 요청한 금액만큼 차감\n    return bagOfMoney - action.payload.amountOfMoneyToCollect;\n  }\n  else if (action.type  === &#39;CREATE_POLICY&#39;) {\n  // 신규고객 가입시 보험회사의 자산에 금액이 추가됨\n    return bagOfMoney + action.payload.amount;\n  }\nreturn bagOfMoney;\n}\n\n// 가입회원 목록\nconst policies = (listOfPolicies = [], action) =&gt; {\n  if (action.type === &#39;CREATE_POLICY&#39;) {\n    return [...listOfPolicies, action.payload.name];\n  }\n  else if (action.type === &#39;DELETE_POLICY&#39;) {\n    return listOfPolicies.filter(name =&gt; name !== action.payload.name);\n  }\n  return listOfPolicies;\n}</code></pre></div>\n<p><code class=\"language-text\">const { createStore, combineReducers } = Redux;</code>\n이러한 선언을 통해 Redux에서 저 메소드들을 쓸 수 있는 것일듯.. 아마?</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const ourDepartments = combineReducers({\n  accounting: accounting,\n  claimHistory : claimHistory,\n  policies: policies\n});\n\nconst store = createStore(ourDepartments);\n\nstore.dispatch(createPolicy(&#39;Alex&#39;, 20));\nstore.dispatch(createPolicy(&#39;Jim&#39;, 30));\nstore.dispatch(createPolicy(&#39;Bob&#39;, 40));</code></pre></div>\n<p>이 과정까지 마친 다음 콘솔을 찍어보자.\n<code class=\"language-text\">console.log(store.getState());</code></p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/9f6b0750-d69a-11e9-b97c-a500ac23aaac/image.png\" alt=\"image.png\"></p>\n<p>현재까지 보험회사 총 자산은 190이고, 고객은 Alex, Jim, Bob 3명이다.</p>\n<p>근데 약간의 변화를 줘보자!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">store.dispatch(createClaim(&#39;Alex&#39;, 120));\nstore.dispatch(createClaim(&#39;Jim&#39;, 50));\nstore.dispatch(deletePolicy(&#39;Bob&#39;));</code></pre></div>\n<p>Alex와 Jim이 보험금을 청구했고, Bob은 보험을 해지했다.\n다시 한번 콘솔을 찍어보면</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/0de3d220-d69b-11e9-b0dc-55946ccbff49/image.png\" alt=\"image.png\"></p>\n<p>190에서 Alex와 Jim이 청구한 보험금이 빠져나서 보험회사의 자산은 20\nclaimHistory를 보면 보험금을 청구한 사람과 금액이 나오고,\npolicies 배열을 보면 Bob이 보험을 해지했기 때문에 2명만 나온다.</p>\n<p>우리가 보통 리액트에서 상태관리 하려면 this.state 어쩌구를 썼는데\nRedux 세상에서는 state 관리를 직접적으로 하는것 대신 dispatch를 이용해서 한다!</p>\n<p>일단 대충 Redux의 원리는 이러하고…\n그 다읍번 포스팅에서 Redux에 대해 좀 더 자세히 써볼 예정쓰!!!</p>\n<h2 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li>Udemy, Modern React with Redux</li>\n</ul>","fields":{"slug":"/posts/wecode7_6TIL_redux_1","tagSlugs":["/tag/wecode/","/tag/codingbootcamp/","/tag/redux/","/tag/react/","/tag/위코드/"]},"frontmatter":{"date":"2019-09-14T12:10:23.169Z","description":"위코드 40일차. 원래는 주말 빼고 숫자를 세곤 했는데 에라모르겠다. 인제부터 블로그 쓸 때마다 플러스 할테다. 여튼.. Udemy에 있는 Redux 강좌를 보며 Redux가 어떤 원리로 돌아가는지 한번 알아보았다.","tags":["wecode","codingbootcamp","redux","react","위코드"],"title":"wecode 7주차_6일 TIL_보험금 처리과정으로 Redux 이해하기"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/wecode7_6TIL_redux_1"}}}