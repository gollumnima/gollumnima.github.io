{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/vue_todolist","webpackCompilationHash":"25d9316762a3a654a790","result":{"data":{"markdownRemark":{"id":"4f0c147e-8b51-5419-b8ea-5541a4e65cc4","html":"<p><img src=\"https://images.velog.io/post-images/dooreplay/c26cd860-369d-11ea-88fc-032b44899567/image.png\" alt=\"image.png\"></p>\n<h2 id=\"vuejs\"><a href=\"#vuejs\" aria-label=\"vuejs permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue.js</h2>\n<p>Vue.js 는 React나 Angular보다 러닝커브가 높지 않아서 괜찮다고들 하는데..<br /> 일단 써봐야 알 것 같다!\n일단 이번 포스팅은 아래의 강의를 듣고 진행중이다. <br />\n이미지 클릭시 링크이동 꼬우~</p>\n<p><a href=\"https://youtu.be/Wy9q22isx3U\"><img src=\"https://images.velog.io/post-images/dooreplay/8ece0320-369e-11ea-8a91-0d32c7f99dd2/image.png\" alt=\"image.png\"> </a></p>\n<h2 id=\"vue-설치하기\"><a href=\"#vue-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"vue 설치하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue 설치하기</h2>\n<p>이 글을 읽는 독자들 대부분은 npm은 깔려 있을 것이라서 npm설치는 생략..!</p>\n<p><b>설치</b> : <code class=\"language-text\">npm install -g @vue/cli</code><br />\n<b>버전확인</b> : <code class=\"language-text\">vue --version</code><br />\n<b>프로젝트 시작</b> : <code class=\"language-text\">vue create 프로젝트명</code><br />\n<b>서버 시작</b> : <code class=\"language-text\">npm run serve</code></p>\n<p>vue create 땡땡 명령어를 치면 아래와 같은 화면이 뜬다!</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/0b364b00-36a6-11ea-a9ac-a97ba9ac44f2/image.png\" alt=\"image.png\"></p>\n<p>default 로 설정을 해주고 엔터를 치면 화면이 하나 더 나오는데 캡쳐 까먹..!<br />\nnpm으로 쓸지 yarn으로 쓸지에 대한 화면이 나오는데.. 이왕 npm으로 시작한거 npm으로 끝장 내기위해 npm 고고!!</p>\n<p>내 디렉토리에 vue project가 깔렸다면 서버를 켜보자.\n<code class=\"language-text\">npm run serve</code></p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/64a70580-36a6-11ea-899c-ff890acc40e7/image.png\" alt=\"image.png\"></p>\n<p>짠 이렇게 잘 뜨고있다.</p>\n<p>서버를 끄고 <code class=\"language-text\">vue ui</code> 명령어 입력 고고</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/be93a6c0-36a6-11ea-899c-ff890acc40e7/image.png\" alt=\"image.png\"></p>\n<p>그러면 이런 화면이 뙇!<br />\n나는 유튭에서 한 것처럼 Desktop에다가 내 프로젝트 디렉토리를 만들거다</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/116b1450-36a7-11ea-a9ac-a97ba9ac44f2/image.png\" alt=\"image.png\"></p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/7d6f5cb0-36a7-11ea-a9ac-a97ba9ac44f2/image.png\" alt=\"image.png\"></p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/98b4b740-36a7-11ea-a9ac-a97ba9ac44f2/image.png\" alt=\"image.png\"></p>\n<p>뷰가 색깔은 정말 기가 막히게 잘 뽑아냈다. 민트민트하니 넘 청량하고 예쁜데.. <br />홍콩시위 발언 왜때문에… 에반가 이름이? 에바쎄바세요 정말 <br />\n여튼.. 이게 리액트에 없는 기능이라 신기하긴한데.. 굳이 써야할 필요성은 아직 모르겠다ㅋ</p>\n<p>어찌됐든 vue project를 열어보자.<br />\nReact에서 index.js역할을 하는게 main.vue 파일 같은데 기본 구성은 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import Vue from &#39;vue&#39;\nimport App from &#39;./App.vue&#39;\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h =&gt; h(App),\n}).$mount(&#39;#app&#39;)</code></pre></div>\n<h2 id=\"vue-쓰면서-설치하면-편한-것들\"><a href=\"#vue-%EC%93%B0%EB%A9%B4%EC%84%9C-%EC%84%A4%EC%B9%98%ED%95%98%EB%A9%B4-%ED%8E%B8%ED%95%9C-%EA%B2%83%EB%93%A4\" aria-label=\"vue 쓰면서 설치하면 편한 것들 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue 쓰면서 설치하면 편한 것들</h2>\n<h4 id=\"vscode에서\"><a href=\"#vscode%EC%97%90%EC%84%9C\" aria-label=\"vscode에서 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VScode에서…</h4>\n<p>vs code extension에 <code class=\"language-text\">vetur</code> 라고 검색 고고! <br />\n원래는 vue랑 이름이 똑같은 vue를 깔았다가.. 영상에서 이걸 깔길래 삭제하고 이걸로 고!</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/add604d0-36bb-11ea-9484-5b7e2e9d14e8/image.png\" alt=\"image.png\"></p>\n<p>이걸 깔아야 색깔이 알록달록 보기 편하다.</p>\n<p>vs code extension에 <code class=\"language-text\">vue 2 Snippets</code> 라고 검색 고고! <br />\n이게 있으면 자동완성이 된다. 아 근데 괄호 다 입력해야 자동완성이 되는데 지금은..<br />\n괄호없이 키워드만 입력했을때 자동완성 되는 것도 한번 찾아봐야지 ㅜㅜ</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/150772f0-36bd-11ea-962f-052c4b507791/image.png\" alt=\"image.png\"></p>\n<h4 id=\"chrome에서\"><a href=\"#chrome%EC%97%90%EC%84%9C\" aria-label=\"chrome에서 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chrome에서..</h4>\n<p>chrome extension에 <code class=\"language-text\">vue.js devtools</code> 라고 검색 고고! <br />\n이게 있으면 크롬 개발자도구 열었을때 Vue 라는 탭이 생기고, 컴포넌트 구조를 보여준다.</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/e10a5440-36c1-11ea-ac63-5165e7759c0d/image.png\" alt=\"image.png\"></p>\n<h2 id=\"컴포넌트-구성\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B5%AC%EC%84%B1\" aria-label=\"컴포넌트 구성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴포넌트 구성</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;template&gt;\n  &lt;div class=&quot;todo-item&quot; v-bind:class=&quot;{ &#39;is-complete&#39;: todo.completed }&quot;&gt;\n    &lt;input type=&quot;checkbox&quot; v-on:change=&quot;markComplete&quot; /&gt;\n    &lt;p&gt;{{ todo.title }}&lt;/p&gt;\n    &lt;button @click=&quot;$emit(&#39;del-todo&#39;, todo.id)&quot; class=&quot;del&quot;&gt;x&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  props: [&quot;todo&quot;],\n  methods: {\n    markComplete() {\n      // console.log(123);\n      this.todo.completed = !this.todo.completed;\n    }\n  }\n};\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.todo-item {\n  background: #f4f4f4;\n  padding: 10px;\n  border-bottom: 1px #ccc dotted;\n}\n\n.is-complete {\n  text-decoration: line-through;\n}\n\n.del {\n  background: #ff0000;\n  color: #fff;\n  border: none;\n  padding: 5px 9px;\n  border-radius: 50%;\n  cursor: pointer;\n}\n&lt;/style&gt;</code></pre></div>\n<p>특이한 점은 template, script, style을 따로 따로 지정했다는 거!\n특히나 그냥 style을 쓰면 global로 적용되는데, <code class=\"language-text\">&lt;style scoped&gt;&lt;/style&gt;</code>로 지정해주면\n그 스타일태그가 쓰이는 컴포넌트 내에서만 적용이 된다는 점..!</p>\n<h2 id=\"app-파일\"><a href=\"#app-%ED%8C%8C%EC%9D%BC\" aria-label=\"app 파일 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>App 파일</h2>\n<p>App.vue 파일의 style에 reset.css 와 비슷한 기능을 하게 하기 위해 아래의 style 정의해주기\nTodos 컴포넌트를 불러오기 위해 import 해오기.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;template&gt;\n  &lt;div id=&quot;app&quot;&gt;\n    &lt;Todos /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport Todos from &quot;./components/Todos&quot;;\n\nexport default {\n  name: &quot;app&quot;,\n  components: {\n    Todos\n  },\n  data() {\n    return {\n      todos: [\n        {\n          id: 1,\n          title: &quot;Todo One&quot;,\n          completed: false\n        },\n        {\n          id: 2,\n          title: &quot;Todo Two&quot;,\n          completed: true\n        },\n        {\n          id: 3,\n          title: &quot;Todo Three&quot;,\n          completed: false\n        }\n      ]\n    };\n  }\n};\n&lt;/script&gt;\n\n&lt;style&gt;\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n  line-height: 1.4;\n}\n&lt;/style&gt;</code></pre></div>\n<h2 id=\"complete-mark-채우기\"><a href=\"#complete-mark-%EC%B1%84%EC%9A%B0%EA%B8%B0\" aria-label=\"complete mark 채우기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Complete mark 채우기</h2>\n<p>우리가 리액트에선 onClick 함수를 줬었는데.. 뷰에서는 v-on이라는 함수를 쓰는 것 같다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;template&gt;\n  &lt;div class=&quot;todo-item&quot; v-bind:class=&quot;{ &#39;is-complete&#39;: todo.completed }&quot;&gt;\n    &lt;input type=&quot;checkbox&quot; v-on:change=&quot;markComplete&quot; /&gt;\n    &lt;p&gt;{{ todo.title }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  props: [&quot;todo&quot;],\n  methods: {\n    markComplete() {\n      // console.log(123);\n      this.todo.completed = !this.todo.completed;\n    }\n  }\n};\n&lt;/script&gt;</code></pre></div>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/1ad90830-376f-11ea-9d40-1ff66cf9cfbe/image.png\" alt=\"image.png\"></p>\n<h2 id=\"vue-에서-이벤트-확인하기\"><a href=\"#vue-%EC%97%90%EC%84%9C-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0\" aria-label=\"vue 에서 이벤트 확인하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue 에서 이벤트 확인하기</h2>\n<p>Vue 탭 사이드에 있는 이벤트를 눌러보면 이벤트가 일어나는 순서대로 딱 다 보인다!<br />\n와.. 이렇게 하면 디버깅하기 진짜 좋을 것 같다.</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/71d618b0-3771-11ea-90f1-2d0d013d84f3/image.png\" alt=\"image.png\"></p>\n<p>나중에 뷰로 작업할 일이 생기면 영상을 다시 정독해보면서 공부 해야겠다.<br />\n지금은 리액트 공부가 더 시급한거 같으므로 여기까지만 작성해본다!</p>\n<h2 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li><a href=\"https://youtu.be/Wy9q22isx3U\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://youtu.be/Wy9q22isx3U</a></li>\n</ul>","fields":{"slug":"/posts/vue_todolist","tagSlugs":["/tag/web/","/tag/javascript/","/tag/frontend/","/tag/vue/"]},"frontmatter":{"date":"2020-01-16T15:21:49.169Z","description":"내가 뷰를 공부하게 될 날이 오다니...! 리액트도 아직 잘알못이긴 한데... 이번주 위코드 프론트앤드 스터디 주제가 뷰여서 뷰공부 도전도전! ","tags":["web","javascript","frontend","vue"],"title":"Vue.js로 Todolist 만들기 도전도전"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/vue_todolist"}}}