{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/wecode8_4TIL_css_hashtag","webpackCompilationHash":"e2863fffa48f8cefae11","result":{"data":{"markdownRemark":{"id":"1a6000e9-2447-5c43-a712-9e13eeb5d3d7","html":"<p><img src=\"https://images.velog.io/post-images/dooreplay/843a3db0-dd12-11e9-906f-2bc170a4c86a/image.png\" alt=\"image.png\"></p>\n<p>요즘 다들 정말 많이 하는 인스타그램! 나도 정말 많이 한다\n먹을거 사진 올리는 재미가 쏠쏠~~\n인스타그램에서만 해시태그를 쓰는건 아니지만 가장 대표적인 예라서 썸네일은 인서타로 ㅋㅋㅋㅋ</p>\n<p>팀원분이 2차 프로젝트에 태그 추가하는 기능을 넣어달라고 요청하셔서\n열심히 구글링한 결과.. 찾아냈다!!!\n그냥 하드코딩만 하면 실력이 늘지 않으니 분석하려고 포스팅해본다 ㅋㅋ\n(참고로 나는 styled-component를 사용했다.)</p>\n<p>코드 먼저 봅시다.</p>\n<h2 id=\"state객체-내부에-선언\"><a href=\"#state%EA%B0%9D%EC%B2%B4-%EB%82%B4%EB%B6%80%EC%97%90-%EC%84%A0%EC%96%B8\" aria-label=\"state객체 내부에 선언 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>state객체 내부에 선언</h2>\n<p><code class=\"language-text\">this.state = {tags: [&quot;핵꿀잼&quot;, &quot;리워드대박&quot;]}</code>\n먼저 state 안에 tags라는 배열을 선언해주고, 그 안에 디폴트 태그값을 넣어준다!</p>\n<h2 id=\"태그-제거하는-기능\"><a href=\"#%ED%83%9C%EA%B7%B8-%EC%A0%9C%EA%B1%B0%ED%95%98%EB%8A%94-%EA%B8%B0%EB%8A%A5\" aria-label=\"태그 제거하는 기능 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>태그 제거하는 기능</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  removeTags = i =&gt; {\n    const newTags = [...this.state.tags];\n    newTags.splice(i, 1);\n    this.setState({ tags: newTags });\n  };</code></pre></div>\n<h2 id=\"엔터로-추가-백스페이스로-제거-기능\"><a href=\"#%EC%97%94%ED%84%B0%EB%A1%9C-%EC%B6%94%EA%B0%80-%EB%B0%B1%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%A1%9C-%EC%A0%9C%EA%B1%B0-%EA%B8%B0%EB%8A%A5\" aria-label=\"엔터로 추가 백스페이스로 제거 기능 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>엔터로 추가, 백스페이스로 제거 기능</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  inputKeyDown = e =&gt; {\n    const val = e.target.value;\n    if (e.key === &quot;Enter&quot; &amp;&amp; val) {\n      if (\n        this.state.tags.find(tag =&gt; tag.toLowerCase() === val.toLowerCase())\n      ) {\n        return;\n      }\n      this.setState({ tags: [...this.state.tags, val] });\n      this.tagInput.value = null;\n    } else if (e.key === &quot;Backspace&quot; &amp;&amp; !val) {\n      this.removeTag(this.state.tags.length - 1);\n    }\n  };</code></pre></div>\n<p>엔터를 쳤을 때 값이 추가될 수 있도록 하는 기능인데..\n솔직히 LowerCase 부분은 왜 넣었는지 모르겠… 어서 지우고 테스트를 해봤다 룰루~</p>\n<p>저걸 지우면 똑같은 문자를 대소문자 바꿔썼을때 추가가 되고, 저게 있어야 중복이 방지된다 ㅋㅋ\n여튼 입력한 글자를 setState를 이용해 tags 배열에 추가를 하고..\n아래는 백스페이스 눌렀을 때 태그를 지우는 기능쓰~</p>\n<p>리턴 전에 디스트럭처링을 먼저 해주고..\n<code class=\"language-text\">const { tags } = this.state;</code></p>\n<h2 id=\"태그-구조\"><a href=\"#%ED%83%9C%EA%B7%B8-%EA%B5%AC%EC%A1%B0\" aria-label=\"태그 구조 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>태그 구조</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;TagWrapper&gt;\n            &lt;TagUL&gt;\n              {tags.map((tag, i) =&gt; (\n                &lt;TagLI key={tag}&gt;\n                  {tag}\n                  &lt;TagBtn\n                    onClick={() =&gt; {\n                      this.removeTags(i);\n                    }}\n                  &gt;\n                    +\n                  &lt;/TagBtn&gt;\n                &lt;/TagLI&gt;\n              ))}\n              &lt;TagSpace&gt;\n                &lt;TagInput\n                  onKeyDown={this.inputKeyDown}\n                  ref={c =&gt; {\n                    this.tagInput = c;\n                  }}\n                /&gt;\n              &lt;/TagSpace&gt;\n            &lt;/TagUL&gt;\n          &lt;/TagWrapper&gt;</code></pre></div>\n<p>생긴건 간단하게 생겨가지고 꽤나 html 요소들이 필요하다 ㅋㅋㅋ\nTagInput이 태그를 입력하는 입력칸이고.. 그렇게 입력하면 <code class=\"language-text\">&lt;TagLI&gt;</code>버튼들이 생겨난다!\ncss 속성도 함께 살펴보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const TagWrapper = styled.div`\n  width: 363px;\n  background: white;\n  border-radius: 2px;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 5px 5px 0;\n`;\n\nconst TagUL = styled.ul`\n  display: inline-flex;\n  flex-wrap: wrap;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\n\nconst TagLI = styled.li`\n  align-items: center;\n  background: linear-gradient(\n    to right top,\n    #233e6a,\n    #44417c,\n    #6c3f86,\n    #953785,\n    #bb2979\n  );\n  border-radius: 2px;\n  color: white;\n  display: flex;\n  font-weight: 300;\n  list-style: none;\n  margin-bottom: 5px;\n  margin-right: 5px;\n  padding: 5px 10px;\n`;\n\nconst TagBtn = styled.button`\n  align-items: center;\n  appearance: none;\n  background: #333333;\n  border: none;\n  border-radius: 50%;\n  color: white;\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 12px;\n  height: 15px;\n  justify-content: center;\n  line-height: 0;\n  margin-left: 8px;\n  transform: rotate(45deg);\n  width: 15px;\n`;\n\nconst TagSpace = styled.li`\n  background: none;\n  flex-grow: 1;\n  padding: 0;\n`;\n\nconst TagInput = styled.input.attrs({\n  type: &quot;text&quot;,\n  placeholder: &quot;원하는 태그를 최대 5개까지 입력해주세요&quot;\n})`\n  border: 1px solid #bdbdbd;\n  border-radius: 4px;\n  width: 100%;\n  height: 43px;\n`;</code></pre></div>\n<p>일단 다 써본 다음에 개발자도구를 열어서 바꾸고 싶은 속성값들은 바꿔주면 된다 ㅋㅋ\n이렇게까지 하면 어떠한 결과물이 나오냐..!</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/2f29a1a0-dd15-11e9-906f-2bc170a4c86a/image.png\" alt=\"image.png\"></p>\n<p>이렇게 뙇!!\n나는 우리 프로젝트의 로고 색깔에 맞춰 파+보로 bg color를 설정했는데 단색으로 해도 예쁠듯</p>\n<p>사실 placeholder에 태그 5개 입력하라고 했는데.. 아직 제한 기능은 못 넣었다.\n급한불부터 끄고 나중에 작업할 시간 있을때 해봐야지 ㅋㅋㅋㅋ</p>\n<h2 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li><a href=\"https://medium.com/@jerrylowm/build-a-tags-input-react-component-from-scratch-1524f02acb9a\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://medium.com/@jerrylowm/build-a-tags-input-react-component-from-scratch-1524f02acb9a</a></li>\n</ul>","fields":{"slug":"/posts/wecode8_4TIL_css_hashtag","tagSlugs":["/tag/wecode/","/tag/codingbootcamp/","/tag/project/","/tag/css/","/tag/위코드/"]},"frontmatter":{"date":"2019-09-19T17:48:23.169Z","description":"위코드 52일차. 한창 2차프로젝트가 진행중인 지금. 프로젝트에 해시태그 추가 및 제거기능을 넣어보았다. 라이브러리를 쓰지 않고도 js와 css를 이용해서 태그 넣는 방법을 알아보았다!","tags":["wecode","codingbootcamp","project","css","위코드"],"title":"wecode 8주차_4일 TIL_프로젝트에 해시태그 추가기능을 넣어보자!"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/wecode8_4TIL_css_hashtag"}}}