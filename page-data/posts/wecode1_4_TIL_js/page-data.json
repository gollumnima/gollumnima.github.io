{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/wecode1_4_TIL_js/","webpackCompilationHash":"a78e2dac341c0a0f28bb","result":{"data":{"markdownRemark":{"id":"ad14f474-83bf-5be7-8c95-a824561a28c9","html":"<p>오늘로 벌써 5일찬데 아직 2일차 때 했던것 정리하는 중~.~아이고… 빨리 다 써야지!!! 밀리지 않게!!</p>\n<blockquote>\n<p>그럼 js 공부 스타트~~</p>\n</blockquote>\n<hr>\n<h2 id=\"변수선언\"><a href=\"#%EB%B3%80%EC%88%98%EC%84%A0%EC%96%B8\" aria-label=\"변수선언 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수선언</h2>\n<ul>\n<li>변수 : 값을 담기 위해 이름을 붙인 상자. 변수는 컴퓨터의 메모리에 일정한 크기의 영역으로 생성됩니다.</li>\n</ul>\n<p>영어공부 할때 ABC 다음으로 배우는게 I am 뭐시기~ 잖아여\n그런것처럼 자바스크립트 세상에서 변수선언은 가장 기본적이면서도 필수적인 것!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var doori = &#39;hungry&#39;</code></pre></div>\n<p>위의 식에서 var가 am(~이다)같은 역할을 해주는 선언자입니다!\nI(주어)같은 역할을 해주는게 여기선 doori인데, 자기 맘대로 이름 붙일수 있어요. 이게 바로 변수!\ndoori라는 변수에 = 뒤에 값(‘hungry’)을 넣어주는걸 우리는 변수 선언이라고 해요.</p>\n<p>자.. 쫌 더 이론적으로 설명해볼게요!</p>\n<h3 id=\"변수선언-3단계\"><a href=\"#%EB%B3%80%EC%88%98%EC%84%A0%EC%96%B8-3%EB%8B%A8%EA%B3%84\" aria-label=\"변수선언 3단계 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수선언 3단계</h3>\n<p>이건 시스템 상에서 일어나는 일이기 때문에 우리눈으로 확인할 순 없어요 ㅠㅠ 그래서 집 짓는 과정으로 예를 들어봤어요~ (혹시나 잘못된 정보가 있으면 댓글 달아주세요!!! 언제든지 수정하겠슴다~)\n<img src=\"https://images.velog.io/post-images/dooreplay/a32424d0-b4c6-11e9-b862-790b02766d4c/image.png\" alt=\"image.png\"></p>\n<h4 id=\"1-선언단계--변수를-변수객체에-등록\"><a href=\"#1-%EC%84%A0%EC%96%B8%EB%8B%A8%EA%B3%84--%EB%B3%80%EC%88%98%EB%A5%BC-%EB%B3%80%EC%88%98%EA%B0%9D%EC%B2%B4%EC%97%90-%EB%93%B1%EB%A1%9D\" aria-label=\"1 선언단계  변수를 변수객체에 등록 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 선언단계 : 변수를 변수객체에 등록</h4>\n<p>집을 지으려면 먼저 나라에서 부지를 사야겠죠? 내 땅이오~ 하고 선언하는거에요\n자바스크립트 세상에서도 변수를 변수객체에 먼저 등록을 해야해요.</p>\n<h4 id=\"2-초기화단계--변수객체에-등록된-변수를-위한-메모리-확보\"><a href=\"#2-%EC%B4%88%EA%B8%B0%ED%99%94%EB%8B%A8%EA%B3%84--%EB%B3%80%EC%88%98%EA%B0%9D%EC%B2%B4%EC%97%90-%EB%93%B1%EB%A1%9D%EB%90%9C-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%9C%84%ED%95%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%ED%99%95%EB%B3%B4\" aria-label=\"2 초기화단계  변수객체에 등록된 변수를 위한 메모리 확보 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 초기화단계 : 변수객체에 등록된 변수를 위한 메모리 확보</h4>\n<p>사람이 맨 땅에 살 수 없잖아요.. 집이 필요하죠!!! 변수가 들어갈 집을 짓는거에요.\n근데 사람이 입주를 안해서 집이 비어있어요. 집주인이 정해지지 않아서 undefined 상태인거에요.</p>\n<h4 id=\"3-할당단계--undefined로-초기화된-변수에-실제-값을-할당\"><a href=\"#3-%ED%95%A0%EB%8B%B9%EB%8B%A8%EA%B3%84--undefined%EB%A1%9C-%EC%B4%88%EA%B8%B0%ED%99%94%EB%90%9C-%EB%B3%80%EC%88%98%EC%97%90-%EC%8B%A4%EC%A0%9C-%EA%B0%92%EC%9D%84-%ED%95%A0%EB%8B%B9\" aria-label=\"3 할당단계  undefined로 초기화된 변수에 실제 값을 할당 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 할당단계 : undefined로 초기화된 변수에 실제 값을 할당</h4>\n<p>집주인이 부동산이랑 계약해서 집을 샀어요. 이제 변수에 실질적인 집주인이 생긴거죠 하하~</p>\n<p>영어에서도 am, are,is 있듯이 변수 선언에서도 <code class=\"language-text\">var</code>,<code class=\"language-text\">let</code>,<code class=\"language-text\">const</code> 세 가지를 선언자로 이용하는데요.<code class=\"language-text\">let</code>이나 <code class=\"language-text\">const</code>는 3단계 순서를 잘 따르는데, <code class=\"language-text\">var</code>는 쫌 달라요. 예를 들어볼게요!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log(&#39;첫번째 &#39; + waffle) // Reference Error. waffle is not defined\nlet waffle = &#39;맛있다&#39;\nconsole.log(&#39;두번째 &#39; + waffle)// Reference Error. waffle is not defined</code></pre></div>\n<p>첫번째 줄에서 waffle을 선언하기 전에 콘솔을 찍었기 때문에 <code class=\"language-text\">ReferenceError: waffle is not defined</code> 라는 에러가 발생합니다.\n두번째 줄에서 waffle이라는 변수에 ‘맛있다’라는 값을 줬지만, 여전히 콘솔을 찍어보면 오류가 발생합니다. let이나 const로 변수를 초기화(2단계)하기 이전에 콘솔로 변수를 호출하면 TDZ(일시적 사각지대)에 빠져서 에러가 발생해욧..\n에러가 생기니까 이게 안 좋은것 같아 보이지만, 오히려 이 에러가 덕분에 어디가 틀렸는지 아니깐 코드를 보수하기 더 쉬워진다는 거!</p>\n<p>이번엔 <code class=\"language-text\">var</code>를 살펴봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log(&#39;첫번째 &#39; + waffle) // Reference Error. waffle is not defined</code></pre></div>\n<p>waffle을 <code class=\"language-text\">var</code>로 선언하기 이전에 콘솔에 waffle을 찍으면 당연 오류가 나겠죠?\n이번에는 콘솔을 지우지 않은 채로 바로 밑에다가 <code class=\"language-text\">var waffle=&#39;맛있다&#39;</code>라고 선언을 해볼게요.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var waffle = &#39;맛있다&#39; // &#39;첫번째 undefined&#39;</code></pre></div>\n<p>그러면 ‘첫번째 undefined’라는 값이 찍힙니다. 원래대로라면 집주인이 나타나기도 전에 집주인 누구냐고 물은거니깐, 에러가 생겨야 하지만, <code class=\"language-text\">var</code>선언자는 1,2단계가 동시에 발생하고, 집주인이 정해지기 전에 undefined라는 값이 기본으로 들어가서 집주인 행세를 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log(&#39;두번째 &#39; + waffle) // &#39;두번째 맛있다&#39;</code></pre></div>\n<p>세번째 줄에 다시 콘솔을 찍어보면 waffle에 맛있다 라는 값이 입주하게 되는거죠!\n여기서 잠깐, 변수 선언도 전에 console을 찍은 두번째는 어찌하여 undefined라는 값이 나왔냐? 이건 <code class=\"language-text\">var</code>의 성질인 호이스팅 때문에 발생한 일인데요!</p>\n<ul>\n<li>호이스팅 : 변수선언을 제일 위로 끌어올리는 현상.</li>\n</ul>\n<p>이건 밑에서 잠깐 짚고 넘어갈거에요.\n여튼..<code class=\"language-text\">let</code>과 <code class=\"language-text\">const</code>가 최신 문법이니 최대한 이걸 씁시다. 얘네를 쓰면 var로 인한 오류가 줄어서 더 편해요~\n<code class=\"language-text\">var</code>는 최대한 사용을 지양합시다!\n<img src=\"https://images.velog.io/post-images/dooreplay/163ebce0-b4c8-11e9-b862-790b02766d4c/image.png\" alt=\"image.png\">\n늙은이는 안된다?? ㅎ 그 이유는 아래서 계속… 궁금하죠?ㅋㅋㅋㅋ</p>\n<h2 id=\"변수의-유효범위\"><a href=\"#%EB%B3%80%EC%88%98%EC%9D%98-%EC%9C%A0%ED%9A%A8%EB%B2%94%EC%9C%84\" aria-label=\"변수의 유효범위 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수의 유효범위</h2>\n<h3 id=\"scope유효범위\"><a href=\"#scope%EC%9C%A0%ED%9A%A8%EB%B2%94%EC%9C%84\" aria-label=\"scope유효범위 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope(유효범위)</h3>\n<p>변수에 접근할 수 있는 범위를 스코프라고 합니다~\n떡볶이로 예를 들어볼게요! </p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/623fbb30-b4cd-11e9-b862-790b02766d4c/image.png\" alt=\"image.png\">(또보겠지 떡볶이&#x26;버갈… 죠온맛탱)\n우리나라 사람들은 떡볶이 하면 다 알죠?? 근데 음… 저기 안드로메다쯤에 사는 외계인은 지구가 너무 멀기도 하고, 지구에 나라도 많으니깐 한국을 모를수도 있잖아요.\n걔한테 백날 떡볶이 맛있어! 너도 먹어봐! 라고 말해봤자 못 알아들어요. 떡볶이가 먹는건지, 입는건지도 모를거 아니에요\n외계인의 scope는 안드로메다라서 대한민국에서 선언한 떡볶이를 못알아듣는거죠~</p>\n<p>이러한 스코프에는 <code class=\"language-text\">어휘적범위</code>,<code class=\"language-text\">동적범위</code> 두 종류가 있는데 js는 어휘적 범위(Lexical Scope)를 선택했어요! 이건 코드가 작성될 때 유효범위가 정해지는 거고, 다이나믹은 다이나믹해서 프로그램 실행하면서 정해져요.. 사실 다이나믹 스코프를 겪어보지 못해서 저는 설명못해줘요 고수님들 블로그 참고하세요ㅠㅋㅋ</p>\n<p>여튼… 우리의 동적범위, Lexical은 <code class=\"language-text\">전역변수</code>와<code class=\"language-text\">지역변수</code>로 나뉩니다요.\n얘네들을 알아보기 전에 먼저 살펴볼 것. 바로바로 블럭!</p>\n<h3 id=\"block\"><a href=\"#block\" aria-label=\"block permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>block</h3>\n<p>함수 예시를 쉽게 만들려다가… 창작의 고통에 빠져서 예전에 정리해놨던 함수를 긁어왔슴다… 하늘색 테두리만 봐주세요!!!!!!\n<img src=\"https://images.velog.io/post-images/dooreplay/a5f7c4f0-b4cb-11e9-8e76-97bd002d6b4f/image.png\" alt=\"image.png\">\n위의 그림에서 보면 함수 전체, for문 안쪽, if문 안쪽에 테두리가 쳐져있죠?\n{}요걸로 감싸진 영역! 이 공간들을 자바스크립트 세상에서는 block이라고 불러요.\n(저는 사실 for문도 block에 해당하는걸 이번에 처음 알았어요! 와우!!)</p>\n<h3 id=\"전역변수와-지역변수\"><a href=\"#%EC%A0%84%EC%97%AD%EB%B3%80%EC%88%98%EC%99%80-%EC%A7%80%EC%97%AD%EB%B3%80%EC%88%98\" aria-label=\"전역변수와 지역변수 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역변수와 지역변수</h3>\n<ul>\n<li>전역변수 : block 바깥에서 선언된 변수</li>\n<li>지역변수 : block 안쪽에서 선언된 변수\n전역변수의 경우 scope가 전체 코드가 될 것이고, 지역변수는 block 안쪽이에요\n예시를 통해 확인해볼까요~~</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let outer = 123;\n\n{\nlet outer = 456;\nlet inner = 456;\n}\n\nconsole.log(outer) // 123\nconsole.log(inner) // Reference Error: inner is not defined</code></pre></div>\n<p>여기서 젤 첫번째 줄의 outer가 바로 전역변수에요. block 바깥에서 선언됐죠~\n콘솔에 outer를 찍어보면 123이 나옵니다. 왜냐?\n두번째 outer는 중괄호 안에서만 활동 가능한 지역변수기 때문이죠!!\ninner를 찍어보면 456이라는 숫자 대신, 에러가 뜨는 이유가 바로 그거에요~\ninner의 값을 콘솔에 나타내고 싶다면 저 중괄호 안에서 console.log를 찍어주세용</p>\n<h2 id=\"하지만-var를-써보면-어떻게-될까요\"><a href=\"#%ED%95%98%EC%A7%80%EB%A7%8C-var%EB%A5%BC-%EC%8D%A8%EB%B3%B4%EB%A9%B4-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%90%A0%EA%B9%8C%EC%9A%94\" aria-label=\"하지만 var를 써보면 어떻게 될까요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>하.지.만 var를 써보면 어떻게 될까요?</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var outer = 123;\n\n{\nvar outer = 456;\nvar inner = 456;\n\n}\n\nconsole.log(outer) // 456\nconsole.log(inner) // 456</code></pre></div>\n<p>우리가 알고있는 이론과는 달리 둘 다 456이라는 값이 나오게 됩니다.\n이것은 호이스팅(hoisting : 끌어올림) 때문에 생기는 일인데요..</p>\n<p>이 부분은 나중에 클로저 정리할 때 다시 자세하게 쓰도록 하겠습니다!!\n(지금 할 게 넘넘 많아유 ㅠㅠ)</p>\n<blockquote>\n<p>오늘의 교훈 : let이나 const 쓰는걸 생활화 하자.</p>\n</blockquote>\n<h2 id=\"to고수님들\"><a href=\"#to%EA%B3%A0%EC%88%98%EB%8B%98%EB%93%A4\" aria-label=\"to고수님들 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>To.고수님들…</h2>\n<h2 id=\"틀린-정보가-있다면-댓글로-의견-주세요-언제든지-적극-반영하겠습니다\"><a href=\"#%ED%8B%80%EB%A6%B0-%EC%A0%95%EB%B3%B4%EA%B0%80-%EC%9E%88%EB%8B%A4%EB%A9%B4-%EB%8C%93%EA%B8%80%EB%A1%9C-%EC%9D%98%EA%B2%AC-%EC%A3%BC%EC%84%B8%EC%9A%94-%EC%96%B8%EC%A0%9C%EB%93%A0%EC%A7%80-%EC%A0%81%EA%B7%B9-%EB%B0%98%EC%98%81%ED%95%98%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"틀린 정보가 있다면 댓글로 의견 주세요 언제든지 적극 반영하겠습니다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>틀린 정보가 있다면 댓글로 의견 주세요!! 언제든지 적극 반영하겠습니다!</h2>\n<h3 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h3>\n<ul>\n<li>도서 모던자바스크립트 입문</li>\n<li>wecode</li>\n<li>MDN</li>\n</ul>","fields":{"slug":"/posts/wecode1_4_TIL_js/","tagSlugs":["/tag/wecode/","/tag/codingbootcamp/","/tag/javascript/","/tag/위코드/"]},"frontmatter":{"date":"2019-08-01T22:40:32.169Z","description":"위코드 4일차 js 정리 1탄. js 공부의 가장 기초이면서도 중요한 변수와 스코프에 대해서 정리해보았다!","tags":["wecode","codingbootcamp","javascript","위코드"],"title":"wecode 1주차_4일 TIL_변수와 스코프"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/wecode1_4_TIL_js/"}}}