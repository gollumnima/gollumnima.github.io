{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/wecode3_2_TIL_react/","webpackCompilationHash":"66d7c77533dd778d8761","result":{"data":{"markdownRemark":{"id":"a5606c75-958c-5c1e-8fd6-9794c891d45d","html":"<p><img src=\"https://images.velog.io/post-images/dooreplay/51e4aa80-bdc8-11e9-a959-a5309cf0f824/books-16557831920.jpg\" alt=\"books-1655783_1920.jpg\"></p>\n<p>리액트는 자바스크립트 라이브러리 중의 하나이다. 그렇다면 라이브러리란 뭘까?</p>\n<h2 id=\"library\"><a href=\"#library\" aria-label=\"library permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Library</h2>\n<p>라이브러리란 유용한 함수 메소드의 꾸러미라고 생각하면 될 것 같다. 라이브러리를 통해 코드 쓰는 시간의 약 20% 정도를 줄일수 있다고 한다 와우! 예전에 개발자들이 자주 쓰던 jQuery또한 라이브러리 중의 하나이다!</p>\n<h2 id=\"react의-폴더-구성\"><a href=\"#react%EC%9D%98-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%84%B1\" aria-label=\"react의 폴더 구성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React의 폴더 구성</h2>\n<p>글만 쓰는게 싫어서 캡쳐한 후 설명을 달았습니다..ㅎㅎ;;</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/aa9d4e60-bf22-11e9-93f4-9b2a14d0ffa2/image.png\" alt=\"image.png\"></p>\n<p><code class=\"language-text\">create-react-app 디렉토리이름</code> 명령어를 입력하고 VS코드를 열어보면 이러한 파일들이 있을건데요, 우리는 여기서 src폴더에 Component와 js,css 파일들을 만들고 그것을 통해 웹페이지를 구현할 거에요!</p>\n<p>그렇다면 리액트에는 어떠한 요소들이 있을지 하나하나 살펴봅시다~</p>\n<h2 id=\"jsxjavascript-xml\"><a href=\"#jsxjavascript-xml\" aria-label=\"jsxjavascript xml permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSX(Javascript XML)</h2>\n<p>html문법을 javascript파일 안에다가 쓴 것. 이것은 js도 html도 아니기 때문에 React 내에서 이걸 페이지내에서 읽히도록 Compile 해주는 과정이 들어갑니다~</p>\n<p>기억해야 할 것들…</p>\n<ul>\n<li>중첩된 요소는 소괄호 닫아주기.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const good = (\n&lt;div&gt;\n    &lt;p&gt;hi&lt;/p&gt;\n&lt;/div&gt;\n);</code></pre></div>\n<ul>\n<li>하나의 태그로 시작쓰.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const wrong = (\n&lt;p&gt;list1&lt;/p&gt;\n&lt;p&gt;list2&lt;/p&gt;\n);</code></pre></div>\n<p>이렇게 쓰면 안됩니다! 제대로 쓰려면 저 두 p태그들을 하나로 묶어주는 div가 필요합니다~</p>\n<ul>\n<li>class나 id 말고 className 쓰기\n<code class=\"language-text\">&lt;p className=&quot;sleepy&quot;&gt;넘나 졸려요&lt;/p&gt;</code></li>\n<li>주석처리 할 때 태그 사이는 <code class=\"language-text\">//</code>, 바깥은 <code class=\"language-text\">{/**/}</code> 이렇게! 이건 어차피 <code class=\"language-text\">ctrl+shift</code> 하면 자동으로 입력 되니까 일단 알아만 두세요~</li>\n</ul>\n<h2 id=\"component\"><a href=\"#component\" aria-label=\"component permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Component</h2>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/c41eeda0-c14b-11e9-8c06-7968c705c2e5/hands-6004971920.jpg\" alt=\"hands-600497_1920.jpg\"></p>\n<p>컴포넌트는 요소라는 뜻인데, 나라라고 생각하면 됩니다! 여러 나라들의 협력을 통해서 지구(Web page)에 메시지를 띄워서 외계인(user)한테 보내는거라고 생각해봅시다 ㅎ</p>\n<p>근데 중요한 점은 단순히 여러개가 합쳐져서 하나를 만드는 것이 아닌, 동일한 것이 있다면 비효율적인 작업을 줄여주는 재사용 가능한 함수에요. 마치 js에서의 class처럼~</p>\n<p>컴포넌트는 함수형과 클래스형 둘로 나뉘는데, 그 전에 컴포넌트를 한번 파헤쳐봅시다.</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/5bb55830-c14b-11e9-bbdb-150d07ce600c/image.png\" alt=\"image.png\"></p>\n<p>컴포넌트파일이 같은 폴더에 있다고 해도 각각의 파일은 아예 다른 나라라고 생각하면 됩니다. 국경을 넘으려면 수출과 수입을 해야 해요! 자세한 설명은 그림을 참고하시면 됩니다. 이렇게 여러 나라의 협력을 통해서…</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/018d1810-c14c-11e9-bbdb-150d07ce600c/image.png\" alt=\"image.png\"></p>\n<p>이렇게 외계인에게 보낼 메시지를 띄울 수 있는거죠! 자 그럼 함수형과 클래스형 컴포넌트에 대해 간단히 짚고 넘어갑시다.</p>\n<h4 id=\"함수형\"><a href=\"#%ED%95%A8%EC%88%98%ED%98%95\" aria-label=\"함수형 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수형</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const Hungry = (props) =&gt; {\n  return &lt;h1&gt;I am hungry. Please give me your {props.name} &lt;/h1&gt;;\n}</code></pre></div>\n<h4 id=\"클래스형\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%ED%98%95\" aria-label=\"클래스형 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스형</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Hungry extends React.Component {\n\trender() {\n  \t\treturn &lt;h1&gt;I am hungry. Please give me your {props.name} &lt;/h1&gt;;\n    }\n}</code></pre></div>\n<p>여기서 공통점이 보이시나요? 네 맞습니다! component는 늘 대문자로 써야해요.\n차이점을 볼까요? 함수형과 달리 클래스형은 <code class=\"language-text\">return</code> 전에 <code class=\"language-text\">render()</code>를 꼭 써야합니다. 그렇다면 props라는건 뭘까요?!</p>\n<h2 id=\"props\"><a href=\"#props\" aria-label=\"props permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>props</h2>\n<p>props는 properties의 줄임말로 js에서의 객체와 똑같은 의미인데요, 부모 컴포넌트에서 자식 컴포넌트로 넘겨주는 값입니다. 함수형 컴포넌트에선 props가 인자로 들어갑니다. 위에서 봤던 hungry함수를 받아서 쓰는 컴포넌트가 있으면 결과값이 나오겠죠? 봅시다!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React, { Component } from &#39;react&#39;;\nimport Hungry from &#39;./Hungry&#39;;\n\nclass Food extends Component {\n  render() {\n    return (\n      &lt;Hungry name=&quot;chicken&quot; /&gt;\n    );\n  }\n}\n\nexport default Food;</code></pre></div>\n<p>Hungry컴포넌트와 Food컴포넌트가 합쳐져서 <code class=\"language-text\">I am hungry. Please give me your chicken</code> 라는 메시지가 완성됩니다. 물론 외계인에게 보여주려면 ReactDOM.render 함수도 따로 써줘야하겠죠~?\nprops말고 state라는 값도 있는데 그건 class 내부에서만 쓸 수 있는 성질이에요.</p>\n<h2 id=\"state\"><a href=\"#state\" aria-label=\"state permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>state</h2>\n<p>말 그대로 컴포넌트의 상태를 말합니다. props와 마찬가지로 객체에요! 이걸 사용하려면 constructor 내부에 꼭 <code class=\"language-text\">this.state = {}</code>이런 식으로 초기화를 해줘야합니다~ 그러고 나서 함수안에 <code class=\"language-text\">this.setState()</code>라는 식을 통해 state의 상태값을 바꿔줄 수 있어요. 예리킴님의 블로그에서 퍼온 아래의 코드를 함께 살펴봅시다~</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Button extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      click: false\n    }\n  }\n\n  render() {\n    return (\n      &lt;div\n        className=&quot;btn&quot;\n        onClick={()=&gt;{this.setState({ click: !this.state.click })}}\n      &gt;\n        {this.state.click ? &#39;좋아요&#39; : &#39;싫어요&#39;}\n      &lt;/div&gt;\n    );\n  }\n}\n\nReactDOM.render(\n  &lt;Button /&gt;,\n  document.getElementById(&#39;root&#39;)\n);</code></pre></div>\n<p>클릭을 할 때마다 좋아요 혹은 싫어요가 번갈아 가면서 나오는 코드입니다.<br>\n먼저 생성자 함수 내부에서 state의 click값이 false로 초기화 된 상태인데요! onClick함수 내의 setState함수에서 click이라는 state값이 <code class=\"language-text\">!</code> 부정되었기 때문에 클릭을 한번 하면 true가 되겠죠? 그 다음엔 삼항연산자에서 true면 좋아요, false면 싫어요가 나오게 됩니다. onClick 함수 내부의 <code class=\"language-text\">!</code> 때문에 클릭을 할 때마다 true, false값이 계속해서 바뀌게 되는거죠~</p>\n<p>분명 이렇게 이해하면 잘 알겠는데, 왜 항상 활용은 어려울까요.. ㅠㅠ\n지난번에 만든 미니트위터를 Component 형식으로 쪼개는 것부터 props와 state를 이용해 데이터 값을 바꿔주는데 애를 먹고있네요 큽… 하다 보면 늘겠죠????????</p>\n<h2 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li><a href=\"https://yeri-kim.github.io/posts/react-jsx/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://yeri-kim.github.io/posts/react-jsx/</a></li>\n<li><a href=\"https://www.sitepoint.com/top-javascript-frameworks-libraries-tools-use/#libraries\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.sitepoint.com/top-javascript-frameworks-libraries-tools-use/#libraries</a></li>\n<li><a href=\"https://velopert.com/3626\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://velopert.com/3626</a></li>\n</ul>","fields":{"slug":"/posts/wecode3_2_TIL_react/","tagSlugs":["/tag/wecode/","/tag/codingbootcamp/","/tag/react/","/tag/위코드/"]},"frontmatter":{"date":"2019-08-13T10:40:32.169Z","description":"위코드 16일차. 프론트엔드 개발자로 성장하는 첫 걸음마로 리액트의 기초개념에 대해 정리해보았다!","tags":["wecode","codingbootcamp","react","위코드"],"title":"wecode 3주차_2일 TIL_React의 기초개념을 알아보자"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/wecode3_2_TIL_react/"}}}