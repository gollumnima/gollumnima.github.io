{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/wecode1_7_TIL_js/","webpackCompilationHash":"904934329d42a9e48021","result":{"data":{"markdownRemark":{"id":"e57fc5fb-2a53-588d-a18c-466b0b642a4e","html":"<p><img src=\"https://images.velog.io/post-images/dooreplay/afe7e500-bbd1-11e9-87e8-a3e7a5dae513/Image-from-iOS.jpg\" alt=\"Image from iOS.jpg\"></p>\n<p>너무 열심히 했는지 산 지 일주일도 안 된 나의 슬리퍼가 끊어져버렸다!ㅋㅋㅋㅋ (지금은 순간접착제로 붙였지롱~)</p>\n<p>세상 어려웠던 부분…☆ 고통의 연속이였지만.. 주위 분들의 따뜻한 도움과 구글링을 통해 해결해나갔다..!\nJson 데이터를 자바스크립트로 불러오는 부분은 특히나 어려웠다.\n노마드코더 니꼬의 무비앱 만들기 react강의에서 fetch를 통해 API를 가져오는 부분이 그당시엔 잘 이해가지 않았는데…\n자바스크립트에서 함 해보니까 약간 알것 같기도 하고..!!</p>\n<h2 id=\"promise\"><a href=\"#promise\" aria-label=\"promise permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Promise</h2>\n<p>fetch는 Promise 기반의 매커니즘이라 fetch를 알아보기 전에 우리는 Promise를 먼저 알아야 해요!</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/93338960-b6a8-11e9-9108-85ef47d591d9/pinky-swear-3293291280.jpg\" alt=\"pinky-swear-329329_1280.jpg\"></p>\n<p>Promise란 말 그대로 약속! 대통령 후보들이 선거에 나와서 공약 걸잖아요. 그런것처럼 미래에 어떠한 일을 할 건데 그것에 대해 미리 말하는거라고 생각하면 돼요!</p>\n<h4 id=\"promise-실행과정\"><a href=\"#promise-%EC%8B%A4%ED%96%89%EA%B3%BC%EC%A0%95\" aria-label=\"promise 실행과정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x3C;Promise 실행과정></h4>\n<ul>\n<li>pending : 실행되거나 (fulfiled) 실패되거나(rejected) 둘 중에 한 가지 일이 일어나기 바로 전의 상태.</li>\n<li>fulfiled : 함수가 실행되면 fulfiled. 공약 지켰음.</li>\n<li>rejected : 함수가 실행되지 않으면 rejected. 공약 불이행.</li>\n<li>settled : 실행된건지 실패한건지 모르겠으나 여튼 결론이 난 상태.</li>\n</ul>\n<p>예시를 통해 살펴볼게요~</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let firstFunction = function() {\n  return new Promise( // new를 안 써주면 Type Error가 뜨더라구요.\n  function (resolve, reject){ //실행 되었을때, 안 되었을때가 인자로.. \n    resolve(&#39;나는 &#39;) // 실행이 된다면 resolve 괄호 안의 함수가 뜸\n  }\n  )\n}\nconsole.log(firstFunction())\n\n// 첫번째 함수와 이어지는 함수 만들려고 함\nlet secondFunction = function(dataFromFirstFunction) { \n  return new Promise( \n    function(resolve, reject){\n      resolve(dataFromFirstFunction + &#39;아직 배가 고프다&#39;)\n    }\n  )\n}\n\nconsole.log(secondFunction())</code></pre></div>\n<p>이 함수를 콘솔창에 찍어보면…</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/3cc7c5f0-b6b2-11e9-97ab-6bebaeb420ca/image.png\" alt=\"image.png\">\nfirstFunction까지는 실행이 잘 되지만, secondFunction의 결과값으론 ‘undefined아직 배가 고프다’가 나온거 보면 연결이 안된것 같죠? resolve 괄호 안에 들어가는 함수의 이름이 dataFromFirstFunction긴 하지만 실질적으로 첫번째 함수에서 데이터를 받아오진 못해요! </p>\n<p>이럴 때 then을 이용하는거에요! <code class=\"language-text\">함수1.then()</code>을 실행하면 함수1이 실행되고 곧바로 then 괄호안의 함수가 실행이 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">firstFunction().then(function(data){\nconsole.log(data)})</code></pre></div>\n<p>콘솔창에 이 함수식을 덧붙여보면 ‘나는’이라는 firstFunction의 값이 나오게 돼요! then 함수 안의 인자인 data를 console에 찍었더니 묶여있는 함수1의 값을 불러오게 되는거죠~ 그럼 이러한 특성을 이용해 첫번째 함수와 두번째 함수를 엮어봅시다!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">firstFunction().then(function(data){\n  console.log(secondFunction(data))\n})</code></pre></div>\n<p>secondFunction()을 실행시킬때 그 안에 data라는 인자를 넣어야 값이 나오니까 함수 안에 윗줄에서 썼던 data라는 동일한 인자를 넣어줬어요.</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/faa5c810-b70c-11e9-b5ae-79d5e29d688d/image.png\" alt=\"image.png\">\n이제 Promise 함수 안의 값이 제대로 뜹니다! 하지만 우리의 목표는 string 형태의 리턴값이니깐.. console.log 부분을 return으로 살짝 바꿔봅시다!!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">firstFunction().then(function(data){\n  return secondFunction(data)\n})</code></pre></div>\n<p>콘솔창에 이 식을 찍어보면 여전히 Promise 함수를 벗어나지 못하는걸 확인할 수 있어요. 이럴땐 then을 한번 더 써줘야해요.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">firstFunction().then(function(data) {\n  return secondFunction(data);\n}).then(function(data){\n        console.log(data)\n   })</code></pre></div>\n<p>세번째줄 then 앞까지가 ‘나는 아직 배가 고프다’라는 string을 가진 Promise를 불러오는 거였죠. 거기다 then을 이용해 함수의 인자로 data라는 값을 넣었을 때, console창에 data 값이 나오게 해줄거에요.</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/b2081f60-b70f-11e9-a7bd-f35eb6f8f890/image.png\" alt=\"image.png\"></p>\n<p>값이 string 형태로 아주 잘 나오고 있죠??! </p>\n<h3 id=\"근데-여기서-한가지-의문점이-생기는-것\"><a href=\"#%EA%B7%BC%EB%8D%B0-%EC%97%AC%EA%B8%B0%EC%84%9C-%ED%95%9C%EA%B0%80%EC%A7%80-%EC%9D%98%EB%AC%B8%EC%A0%90%EC%9D%B4-%EC%83%9D%EA%B8%B0%EB%8A%94-%EA%B2%83\" aria-label=\"근데 여기서 한가지 의문점이 생기는 것 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>근데 여기서 한가지 의문점이 생기는 것…</h3>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/0311aac0-b710-11e9-b5ae-79d5e29d688d/image.png\" alt=\"image.png\"></p>\n<p>마지막에 console.log가 아닌 return이 되면 string이 아닌 Promise 형태로 값이 나온다는것.. 이건 왜 그런지 도저히 모르겠네요 ㅠㅠ</p>\n<h2 id=\"fetch\"><a href=\"#fetch\" aria-label=\"fetch permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fetch</h2>\n<p>fetch는 생활코딩으로 기초를 잡고 제로초님 포스팅과 유튜브로 다시 공부해봤어여~</p>\n<ol>\n<li>fetch() : API에서 data를 불러올때 쓰는 Promise 기반의 매커니즘. fetch(‘html’)를 통해서 괄호안의 파일을 불러온다. fetch가 리턴하는건 결국은 Promise라서 우리는 then을 통해 Promise가 아닌 다른 형태로 값을 불러와야한다… 맞나?</li>\n<li>.then() : then은 fetch의 비서 정도라고 생각하면 될듯..?! fetch 실행으로 서버에서 응답할 때까지 <code class=\"language-text\">.then()</code>이라는 함수를 이용해서 then의 괄호 안에 들어가는 함수를 실행한다! 쉬지도 않고 부지런쓰~ 위에서 나온 Promise 때와 동일한 기능!</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">fetch(&#39;./data/getAllTimeline.json&#39;)\n.then((res) =&gt; {\n  if (res.status === 200 || res.status === 201) { \n    res.text().then(text =&gt; console.log(text))\n  }\n  else {\n    console.log(res.statusText)\n  }\n}).catch(err =&gt; console.log(err)) </code></pre></div>\n<p>간단히 보자면 then을 통해서 reponse 객체를 받고, catch를 통해 error를 받아요!\n이 과정을 순서대로 자세히 살펴봅시다~</p>\n<ol>\n<li>fetch로 data폴더의 getAllTimeline.json이라는 데이터를 불러온다</li>\n<li>then을 이용해 response 객체를 불러오는데…</li>\n<li>response의 상태가 200이나 201일때(정상작동시)</li>\n<li>콘솔창에 text를 띄운다</li>\n<li>그렇지 않으면 response의 상태를 띄운다. 404 Page Not Found와 같은 빡치는 에러를 보게 되는거죠 ㅎ</li>\n</ol>\n<h2 id=\"미니터-json파일을-자바스크립트로-불러오기\"><a href=\"#%EB%AF%B8%EB%8B%88%ED%84%B0-json%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\" aria-label=\"미니터 json파일을 자바스크립트로 불러오기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>미니터 json파일을 자바스크립트로 불러오기</h2>\n<p>저는 일단 data라는 폴더 안에 아래와 같은 getAllTimeline.json이라는 파일을 가지고 있어요.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;result&quot;: [\n    {\n      &quot;contents&quot;: &quot;도리를 찾아서~&quot;,\n      &quot;date&quot;: &quot;19920601&quot;,\n      &quot;user&quot;: &quot;Dory&quot;\n    },\n    {\n      &quot;contents&quot;: &quot;와플번트 진짜 맛있었는데 왜 사라진거지 너무 속상하다&quot;,\n      &quot;date&quot;: &quot;20190327&quot;,\n      &quot;user&quot;: &quot;Waffle&quot;\n    },\n    {\n      &quot;contents&quot;: &quot;예쓰! 우리는 모두 위코더 룰루~&quot;,\n      &quot;date&quot;: &quot;20190729&quot;,\n      &quot;user&quot;: &quot;Wecode&quot;\n    },\n    {\n      &quot;contents&quot;: &quot;아스트로에 차은우가 있다면, 위코드에는 내가 있쥐&quot;,\n      &quot;date&quot;: &quot;20190323&quot;,\n      &quot;user&quot;: &quot;Eunwoo Song&quot;\n    },\n    {\n      &quot;contents&quot;: &quot;누구보다도 예리한 감각을 자랑하는 프론트앤드 엔지니어는 누구~?&quot;,\n      &quot;date&quot;: &quot;20190323&quot;,\n      &quot;user&quot;: &quot;Yeri Kim&quot;\n    },\n    {\n      &quot;contents&quot;: &quot;아이스크림 드실분?&quot;,\n      &quot;date&quot;: &quot;20190803&quot;,\n      &quot;user&quot;: &quot;Jihun Park&quot;\n    },\n    {\n      &quot;contents&quot;: &quot;주말에는 냉방 시스템이 가동되지 않으니 이 점 참고하시기 바랍니다.&quot;,\n      &quot;date&quot;: &quot;20190321&quot;,\n      &quot;user&quot;: &quot;WeWork&quot;\n    }\n  ]\n}</code></pre></div>\n<p>자바스크립트에서 fetch를 써봅시다. 페이지를 열 때 기본적으로 떠 있는 트윗목록을 불러오기 위해 opening이라는 함수 안에 fetch함수를 써봤어요.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function opening() {\n  fetch(&#39;./data/getAllTimeline.json&#39;) // json파일이 있는 파일의 경로\n    .then((res) =&gt; res.json()) // 데이터를 json형태로 바꿔주기\n    .then(function (data) { // data라는 임의의 값을 인자로 받는 함수.\n      let people = data.result; //json파일을 감싸는 객체가 result로 시작해서 data.result\n      console.log(people) // people 콘솔을 찍어보면 {contents: &quot;도리를 찾아서~&quot;, date: &quot;19920601&quot;, user: &quot;Dory&quot;} 이러한 객체가 7개 나옴\n      return people.map(function (person) { //people에서 contents,date,user를 뽑아내기 위해 map 사용\n      // 이 아래는 html 틀 구현을 위해 쓴 식들\n        let contents_wrap = createNode(&#39;div&#39;) \n        let name = createNode(&#39;button&#39;)\n        let time = createNode(&#39;span&#39;)\n        let doorit = createNode(&#39;div&#39;)\n        contents_wrap.className = &#39;contents_wrap&#39;\n        name.className = &#39;doorits_id&#39;\n        time.className = &#39;time&#39;\n        doorit.className = &#39;doorits_contents&#39;\n\n        name.innerHTML += person.user\n        time.innerHTML += `${String(person.date).split(&#39;&#39;).slice(0, 4).join(&#39;&#39;)}-${ String(person.date).split(&#39;&#39;).slice(4, 6).join(&#39;&#39;)}-${ String(person.date).split(&#39;&#39;).slice(6, 8).join(&#39;&#39;)}`\n        doorit.innerHTML += person.contents\n\n        append(contents_wrap, name)\n        append(contents_wrap, time)\n        append(contents_wrap, doorit)\n        append(doorits_box, contents_wrap)\n\n        doorits_box.prepend(contents_wrap)\n\n        //원래 있는 트윗의 개수 불러오기!\n        const sum_doorits = document.getElementsByClassName(&#39;sum_doorits&#39;)[0]\n        const total_doorits = doorits_box.children.length\n        sum_doorits.innerHTML = total_doorits;\n      })\n    })\n    .catch(err =&gt; console.log(err))\n}</code></pre></div>\n<p>개발자도구-네트워크 탭에 한번 들어가보세요.\njson 데이터를 성공적으로 불러왔다면 네트워크 탭에서 확인할 수 있어요~~</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/7e31f430-b715-11e9-a7bd-f35eb6f8f890/image.png\" alt=\"image.png\"></p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/a3951210-b716-11e9-b5ae-79d5e29d688d/image.png\" alt=\"image.png\"></p>\n<p>값도 아주 잘 불러와지고요!</p>\n<h3 id=\"근데-식을-작성하면서-fetch-typeerror가-생겼었죠-어떤-오류냐\"><a href=\"#%EA%B7%BC%EB%8D%B0-%EC%8B%9D%EC%9D%84-%EC%9E%91%EC%84%B1%ED%95%98%EB%A9%B4%EC%84%9C-fetch-typeerror%EA%B0%80-%EC%83%9D%EA%B2%BC%EC%97%88%EC%A3%A0-%EC%96%B4%EB%96%A4-%EC%98%A4%EB%A5%98%EB%83%90\" aria-label=\"근데 식을 작성하면서 fetch typeerror가 생겼었죠 어떤 오류냐 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>근데 식을 작성하면서 fetch TypeError가 생겼었죠.. 어떤 오류냐..!</h3>\n<p>VM1621:1 Uncaught (in promise) TypeError: Failed to execute ‘fetch’ on ‘Window’: 1 argument required, but only 0 present. at :1:1</p>\n<p>이 오류가 왜 생겼냐 하고 봤더니… 제가 Live Server를 통해 파일을 열지 않아서였더라고요\n<code class=\"language-text\">Ctrl+Shift+x</code> 로 Live Server 검색 고고~ 비주얼 스튜디오 확장팩 다운 받으세요\n그 다음 html파일 우클릭 해서 열면 저 오류는 없어질거에요~~</p>\n<h3 id=\"별책부록-미니터에-업데이트-되는-트윗-수-반영하기\"><a href=\"#%EB%B3%84%EC%B1%85%EB%B6%80%EB%A1%9D-%EB%AF%B8%EB%8B%88%ED%84%B0%EC%97%90-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EB%90%98%EB%8A%94-%ED%8A%B8%EC%9C%97-%EC%88%98-%EB%B0%98%EC%98%81%ED%95%98%EA%B8%B0\" aria-label=\"별책부록 미니터에 업데이트 되는 트윗 수 반영하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>별책부록… 미니터에 업데이트 되는 트윗 수 반영하기</h3>\n<p>제가 처음에 접근했던 방식은..</p>\n<p><img src=\"https://images.velog.io/post-images/dooreplay/76785840-b717-11e9-b5ae-79d5e29d688d/image.png\" alt=\"image.png\">\n2번의 div의 개수를 세서 1번에 추가가 될수 있도록.. 아주 단순하게 생각했어요</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const sum_doorits = document.getElementsByClassName(&#39;sum_doorits&#39;)[0](1번의 className)\nconst total_doorits = doorits_box.children.length //화면에 뜬 전체 트윗중 하얀부분의 개수(2번의 개수)\nsum_doorits.innerHTML += total_doorits; (1번에 2번의 개수 넣기)</code></pre></div>\n<p>이렇게요!</p>\n<p>웹페이지의 콘솔에는 개수가 7개로 잘 나오지만 visual studio에선 값이 0개가 나오더라고요\n저는 저 합계를 세어주는 함수의 위치가 별로 중요하지 않다고 생각해서 아무데나 넣었는데\n그렇게 하면 안되고! 트윗이 생성되고 삭제되는 곳 모두에 넣어야 하더라구요!</p>\n<p>그래서 트윗을 불러올때, 트윗 생성될때, 트윗 삭제될 때 모두 세 곳에 저 식을 넣어줬어요.\n그랬더니 숫자가 넘나 잘 뜨는것!!</p>\n<h4 id=\"또-신기했던-점\"><a href=\"#%EB%98%90-%EC%8B%A0%EA%B8%B0%ED%96%88%EB%8D%98-%EC%A0%90\" aria-label=\"또 신기했던 점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>또 신기했던 점…</h4>\n<p>트윗 삭제가 될땐 +=이나 —가 아닌 그냥 대입연산자로 쓴다는 점..\n그것도 모르고 +1를 했는데 값이 늘어나서 거기다 -1을 붙이니까 값이 제대로 반영이 되고..\n어??? 이상한데?? 나 너무 바보같은데?? 하다가 식을 보니 제가 +=을 =로 썼더라고요 ㅋㅋㅋㅋ</p>\n<p>여튼… 미니터는 이제 끝났습니다~(css 부분 정리할까말까 고민중…ㅠㅠ)\n이젠 저도 게임만들기로 궈궈…☆</p>\n<h2 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li><a href=\"https://programmingsummaries.tistory.com/325\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://programmingsummaries.tistory.com/325</a></li>\n<li><a href=\"https://www.zerocho.com/category/HTML&#x26;DOM/post/-595b4bc97cafe885540c0c1c\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.zerocho.com/category/HTML&#x26;DOM/post/-595b4bc97cafe885540c0c1c</a></li>\n<li>생활코딩</li>\n<li><a href=\"https://www.youtube.com/watch?v=IHjzyhjKxtc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.youtube.com/watch?v=IHjzyhjKxtc</a></li>\n<li><a href=\"http://blog.naver.com/PostView.nhn?blogId=cosmosjs&#x26;logNo=221379310763&#x26;categoryNo=56&#x26;parentCategoryNo=0&#x26;viewDate=&#x26;currentPage=1&#x26;postListTopCurrentPage=1&#x26;from=postView\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://blog.naver.com/PostView.nhn?blogId=cosmosjs&#x26;logNo=221379310763&#x26;categoryNo=56&#x26;parentCategoryNo=0&#x26;viewDate=¤tPage=1&#x26;postListTopCurrentPage=1&#x26;from=postView</a></li>\n</ul>","fields":{"slug":"/posts/wecode1_7_TIL_js/","tagSlugs":["/tag/wecode/","/tag/codingbootcamp/","/tag/javascript/","/tag/json/","/tag/위코드/"]},"frontmatter":{"date":"2019-08-04T22:40:32.169Z","description":"위코드 7일차 js. fetch로 json데이터를 불러오기 위해 Promise 개념과 fetch에 대해 공부해보았다!","tags":["wecode","codingbootcamp","javascript","json","위코드"],"title":"wecode 1주차_7일 TIL_fetch로 json 데이터 불러오기"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/wecode1_7_TIL_js/"}}}