<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[둘둘`s dooreplay!]]></title><description><![CDATA[Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed arcu.]]></description><link>https://gollumnima.github.io/</link><generator>RSS for Node</generator><lastBuildDate>Sun, 11 Aug 2019 00:09:58 GMT</lastBuildDate><item><title><![CDATA[wecode 1주차_5일 TIL_js(2)화살표함수]]></title><description><![CDATA[위코드 5일차 js 정리 2탄. ES6 문법 중 나에게 아직도 너무 익숙지 않은 화살표함수에 대해 정리해보았다!]]></description><link>https://gollumnima.github.io//posts/wecode1_5_TIL_js/</link><guid isPermaLink="false">https://gollumnima.github.io//posts/wecode1_5_TIL_js/</guid><pubDate>Fri, 02 Aug 2019 23:46:37 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/21b05e00-b656-11e9-98df-8b92d767b097/image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;화살표 함수만은 피하고 싶었는데.. 위코드 2일차에 마주쳤다…☆
어차피 나중엔 계속 쓰게 될텐데 지금 정리해야 마음이 편해질것 같아서 정리해봅니다~~&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;고통을 즐기는 개발자가 되자!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;화살표함수&quot;&gt;&lt;a href=&quot;#%ED%99%94%EC%82%B4%ED%91%9C%ED%95%A8%EC%88%98&quot; aria-label=&quot;화살표함수 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;화살표함수&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;그냥 함수 있는거 쓰면 되는데.. 화살표 함수. 대체 왜 쓸까?&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ES6 문법이라서
-js를 표준화하는 ECMA Script의 버전이 벌써 10까지 나왔다네요… 세상에마상에
-대세를 따르는 개발자가 됩시다! 지금은 화살표가 어색할지 몰라도 나중엔 디폴트값이 될지도…&lt;/li&gt;
&lt;li&gt;코드가 엄청나게 짧아진다
-중괄호, 엔터 없이도 =&gt; 이 화살표만 있으면 되니까 식이 좀 더 깔끔쓰!&lt;/li&gt;
&lt;li&gt;멋있어 보인다
-멋에 죽고 멋에 사는 개발자라면 화살표함수를 쓰시오~ㅋㅋ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; 화살표 함수를 이번기회에 제대로 정리해야지!! 하고 마음 먹었으나…
예시 위주로만 갈게요ㅠ
화살표 함수에 대해서는 Baby Tiger님이 정리를 잘 해놨으니 링크 드릴게요 :)
&lt;a href=&quot;https://babytiger.netlify.com/posts/arrow-function/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://babytiger.netlify.com/posts/arrow-function/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;화살표-함수-적용--인자가-없을때&quot;&gt;&lt;a href=&quot;#%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98-%EC%A0%81%EC%9A%A9--%EC%9D%B8%EC%9E%90%EA%B0%80-%EC%97%86%EC%9D%84%EB%95%8C&quot; aria-label=&quot;화살표 함수 적용  인자가 없을때 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;화살표 함수 적용 : 인자가 없을때&lt;/h3&gt;
&lt;p&gt;들어가기 앞서.. 한 가지 덧붙이자면!!! 화살표 함수는 무조건 익명함수에요.
&lt;code class=&quot;language-text&quot;&gt;let&lt;/code&gt;이나 &lt;code class=&quot;language-text&quot;&gt;const&lt;/code&gt;같은 선언자로 선언하는 함수 표현식으로 작성해주세용
자 그럼 1번 예시!!&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt; function macaron(){
  return &amp;#39;달콤해~&amp;#39;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이랬던 함수가…&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;const macaron = () =&amp;gt; &amp;#39;달콤해~&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;일반 함수식과 비교해보면 중괄호와 return 대신 =&gt; 이 화살표를 쓴 걸 알수있져!
예시의 식처럼 한줄짜리 식들은 중괄호를 생략할 수 있어요~
또한 함수이름과 소괄호 사이에 = 을 써서 함수를 정의한다는 점도 알아두세요!&lt;/p&gt;
&lt;h3 id=&quot;화살표-함수-적용--인자가-하나&quot;&gt;&lt;a href=&quot;#%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98-%EC%A0%81%EC%9A%A9--%EC%9D%B8%EC%9E%90%EA%B0%80-%ED%95%98%EB%82%98&quot; aria-label=&quot;화살표 함수 적용  인자가 하나 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;화살표 함수 적용 : 인자가 하나&lt;/h3&gt;
&lt;p&gt;이번엔 인자가 하나일 경우를 살펴볼게요.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;const a = function square(y) {
  return y * y
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이랬던 함수가…&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;const square = y =&amp;gt; y*y&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 이렇게 한 줄로 줄어들었어요! 개이득!!
위에서 예시로 든 제곱 함수보다 식이 더 복잡해질때 화살표함수를 쓰는게 유용하겠죠?
인자가 하나일땐 괄호 생략이 가능한데, 두 개 이상일때부턴 괄호를 꼭꼭 써주세요!&lt;/p&gt;
&lt;h3 id=&quot;화살표-함수-적용--인자가-둘&quot;&gt;&lt;a href=&quot;#%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98-%EC%A0%81%EC%9A%A9--%EC%9D%B8%EC%9E%90%EA%B0%80-%EB%91%98&quot; aria-label=&quot;화살표 함수 적용  인자가 둘 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;화살표 함수 적용 : 인자가 둘&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;function plus(a,b) {
  return `${a} 더하기 ${b}는 ${a+b}입니다`
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이랬던 식을 화살표 함수에 적용하면…&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;const plus = (a,b) =&amp;gt;`${a} 더하기 ${b}는 ${a+b}입니다`&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이렇게 뙇! 인자가 두개라서 괄호를 붙여줬어요~~&lt;/p&gt;
&lt;p&gt;여기서 잠깐, &lt;code class=&quot;language-text&quot;&gt;${}&lt;/code&gt;&amp;#x3C;= 이 달러표시는 뭘까요~얘도 화살표 함수처럼 ES6문법이에요.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;template literal : 따옴표 대신 빽틱(1 옆의 것)을 이용해 문자열을 표기하는 방법. 빽틱 안에 ${}를 이용해 값을 표기할 수 있음.
(처음엔 빽틱이 빽티기인줄 알고 뻥튀기가 생각났는데… back tick.. 영어였슴다…☆)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이렇게 얘기하면 뭔 말인지 모르겠죠? 예시를 들어볼게요~&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;const plus = (a,b) =&amp;gt;a+ &amp;#39; 더하기 &amp;#39; + b+&amp;#39;는 &amp;#39;+a+b+&amp;#39;입니다&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;아까 위에서 만든 함수의 리턴값을 일반적인 string을 나타내는 형식으로 써봤어요.
template literal을 이용하면 전체를 빽틱으로 감싸고 대입이 필요한 값에만 ${}를 씌워주면 되는데, 이렇게 쓰니 참 복잡하죠? 편하게 갑시다~~ &lt;/p&gt;
&lt;h3 id=&quot;화살표-함수-적용--array-method&quot;&gt;&lt;a href=&quot;#%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98-%EC%A0%81%EC%9A%A9--array-method&quot; aria-label=&quot;화살표 함수 적용  array method permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;화살표 함수 적용 : Array Method&lt;/h3&gt;
&lt;p&gt;가장 작은 숫자를 찾는 함수를 만들어 보았어요. 최대한 직관적이게 풀어볼게요.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;const arr = [42,1,&amp;#39;a&amp;#39;,&amp;#39;z&amp;#39;,100,28,&amp;#39;맛있다&amp;#39;]
function findSmall(arr){
  let temp = []
  let answer = &amp;#39;&amp;#39;
  for(let i=0; i &amp;lt; arr.length; i++) {
    if(typeof arr[i] === &amp;#39;number&amp;#39;) {
      temp.push(arr[i])
    }
  }
  let min = temp[0]
  for(let j=0; j &amp;lt; temp.length; j++) {
    if(min &amp;gt; temp[j]) {
      min = temp[j];
    }
  }
  return min;
}
console.log(findSmall(arr)) // 100&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;첫번째 for문에서 숫자인지를 걸러주고, 두번째 for문에선 숫자들의 대소비교를 통해 답을 냈어요.&lt;/p&gt;
&lt;p&gt;자… 그럼 method로 아주 간단하게 풀어봅시다. 놀라지 마세요!&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;const findSmall = () =&amp;gt; arr.filter(x=&amp;gt;typeof x === &amp;#39;number&amp;#39;).sort((a,b)=&amp;gt;a-b)[0]

console.log(findSmall(arr)) // 100&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;저 긴 식이 이렇게나 짧게 줄어들었어요!
저는 여기서 array method 중에 하나인 &lt;code class=&quot;language-text&quot;&gt;filter&lt;/code&gt;를 사용했는데요.
여기서 filter는 주어진 조건에 맞는 애들만 딱 걸러주는 역할을 하고, sort 함수는 작은 숫자에서 큰 숫자 순으로 정렬을 해주는 역할을 했어요.&lt;/p&gt;
&lt;p&gt;예시를 하나 더 들어볼게용
문제의 출처는 위코드 입니다 ㅎ 실은 제가 이걸 노가다방식으로 풀었기 때문에 블로그에 정리하면서 다시 한번 풀어보고 싶었어요!&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;//dates=[&amp;#39;2019-03-21&amp;#39;, &amp;#39;2019-04-21&amp;#39;, &amp;#39;2019-05-21&amp;#39;]

//리턴값을 이렇게 바꾸시오.
[&amp;#39;2019년 03월 21일&amp;#39;, &amp;#39;2019년 04월 21일&amp;#39;, &amp;#39;2019년 05월 21일&amp;#39;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;처음에 푼 식을 먼저 공개할게요.. 완전 노가다에요…&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;let formatDate = dates =&amp;gt; Array(`${dates[0].split(&amp;#39;-&amp;#39;)[0]}년 ${dates[0].split(&amp;#39;-&amp;#39;)[1]}월 ${dates[0].split(&amp;#39;-&amp;#39;)[2]}일`,`${dates[1].split(&amp;#39;-&amp;#39;)[0]}년 ${dates[1].split(&amp;#39;-&amp;#39;)[1]}월 ${dates[1].split(&amp;#39;-&amp;#39;)[2]}일`,`${dates[2].split(&amp;#39;-&amp;#39;)[0]}년 ${dates[2].split(&amp;#39;-&amp;#39;)[1]}월 ${dates[2].split(&amp;#39;-&amp;#39;)[2]}일`)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이걸 다시 제대로.. &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt;을 이용해 묶어보겠슴다
사실 계속 어떻게 할지 헤매다가 같은 기수 순규님의 도움으로 해결쓰…☆&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;let formatDate = arr =&amp;gt; {  //1번
  return arr.map(x =&amp;gt; { //2번
    let temp = x.split(&amp;#39;-&amp;#39;) //3번
    return `${temp[0]}년 ${temp[1]}월 ${temp[2]}일` //4번
  })
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;1번 : arr에 적용되는 식이 한 줄이 아닐거니까 화살표 뒤에 중괄호와 리턴 쓰기(사실 화살표 함수라 해서 무조건 중괄호 안쓰려고 생각하다 보니 더 안풀렸다 ㅠ)&lt;/li&gt;
&lt;li&gt;2번 : arr에 &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt;을 적용해서 각각의 arr의 element들에 적용되는 식 만듬. 여기서 임의의 변수 x란 arr[i]와 동일한 역할&lt;/li&gt;
&lt;li&gt;3번 : x를 split해준 값을 temp에 담는다.(사실 이 과정이 머릿속으로 그려지지 않아서 하드코딩으로 지저분하게 문제를 풀었다ㅜㅜ 담으면 되는거였구나 ㅠㅠ)&lt;/li&gt;
&lt;li&gt;4번 : temp 배열의 0번째, 1번째, 2번째의 데이터를 통해 값을 리턴&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;화살표 함수는 여전히 헷갈리는 어려운 녀석이다 ㅜㅜ
그치만 계속 계속 쓰다보면 늘겠지!! 화살표 함수를 습관화하자!!!&lt;/p&gt;
&lt;h3 id=&quot;별책부록--커링과-화살표함수&quot;&gt;&lt;a href=&quot;#%EB%B3%84%EC%B1%85%EB%B6%80%EB%A1%9D--%EC%BB%A4%EB%A7%81%EA%B3%BC-%ED%99%94%EC%82%B4%ED%91%9C%ED%95%A8%EC%88%98&quot; aria-label=&quot;별책부록  커링과 화살표함수 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;별책부록 : 커링과 화살표함수&lt;/h3&gt;
&lt;p&gt;예전에 커링 정리 하다가 엄청 놀란 식이 있어서 공유해봅니다..☆&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;let sum = function(x) {
  return function(y) {
    return x+y
  }
}

console.log(sum(5)(7)) // 12&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;물론 커링 자체도 굉장히 놀랍고 신기한 기술인데.. 여기에 화살표함수가 더해지면&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;let sum = x =&amp;gt; y =&amp;gt; x+y

console.log(sum(5)(7)) // 12&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;와우…!!! 놀라움의 연속쓰~~
커링은 더 나중에 정리해보겠슴다!
화살표함수가 익숙해지는 그날까지~~~ 모두모두 화이팅&lt;/p&gt;
&lt;h3 id=&quot;reference&quot;&gt;&lt;a href=&quot;#reference&quot; aria-label=&quot;reference permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://poiemaweb.com/es6-arrow-function&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://poiemaweb.com/es6-arrow-function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;wecode&lt;/li&gt;
&lt;li&gt;MDN&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[wecode 1주차_4일 TIL_js(1)변수와 스코프]]></title><description><![CDATA[위코드 4일차 js 정리 1탄. js 공부의 가장 기초이면서도 중요한 변수와 스코프에 대해서 정리해보았다!]]></description><link>https://gollumnima.github.io//posts/wecode1_4_TIL_js/</link><guid isPermaLink="false">https://gollumnima.github.io//posts/wecode1_4_TIL_js/</guid><pubDate>Thu, 01 Aug 2019 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;오늘로 벌써 5일찬데 아직 2일차 때 했던것 정리하는 중~.~아이고… 빨리 다 써야지!!! 밀리지 않게!!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;그럼 js 공부 스타트~~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;변수선언&quot;&gt;&lt;a href=&quot;#%EB%B3%80%EC%88%98%EC%84%A0%EC%96%B8&quot; aria-label=&quot;변수선언 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;변수선언&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;변수 : 값을 담기 위해 이름을 붙인 상자. 변수는 컴퓨터의 메모리에 일정한 크기의 영역으로 생성됩니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;영어공부 할때 ABC 다음으로 배우는게 I am 뭐시기~ 잖아여
그런것처럼 자바스크립트 세상에서 변수선언은 가장 기본적이면서도 필수적인 것!&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;var doori = &amp;#39;hungry&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위의 식에서 var가 am(~이다)같은 역할을 해주는 선언자입니다!
I(주어)같은 역할을 해주는게 여기선 doori인데, 자기 맘대로 이름 붙일수 있어요. 이게 바로 변수!
doori라는 변수에 = 뒤에 값(‘hungry’)을 넣어주는걸 우리는 변수 선언이라고 해요.&lt;/p&gt;
&lt;p&gt;자.. 쫌 더 이론적으로 설명해볼게요!&lt;/p&gt;
&lt;h3 id=&quot;변수선언-3단계&quot;&gt;&lt;a href=&quot;#%EB%B3%80%EC%88%98%EC%84%A0%EC%96%B8-3%EB%8B%A8%EA%B3%84&quot; aria-label=&quot;변수선언 3단계 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;변수선언 3단계&lt;/h3&gt;
&lt;p&gt;이건 시스템 상에서 일어나는 일이기 때문에 우리눈으로 확인할 순 없어요 ㅠㅠ 그래서 집 짓는 과정으로 예를 들어봤어요~ (혹시나 잘못된 정보가 있으면 댓글 달아주세요!!! 언제든지 수정하겠슴다~)
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/a32424d0-b4c6-11e9-b862-790b02766d4c/image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-선언단계--변수를-변수객체에-등록&quot;&gt;&lt;a href=&quot;#1-%EC%84%A0%EC%96%B8%EB%8B%A8%EA%B3%84--%EB%B3%80%EC%88%98%EB%A5%BC-%EB%B3%80%EC%88%98%EA%B0%9D%EC%B2%B4%EC%97%90-%EB%93%B1%EB%A1%9D&quot; aria-label=&quot;1 선언단계  변수를 변수객체에 등록 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 선언단계 : 변수를 변수객체에 등록&lt;/h4&gt;
&lt;p&gt;집을 지으려면 먼저 나라에서 부지를 사야겠죠? 내 땅이오~ 하고 선언하는거에요
자바스크립트 세상에서도 변수를 변수객체에 먼저 등록을 해야해요.&lt;/p&gt;
&lt;h4 id=&quot;2-초기화단계--변수객체에-등록된-변수를-위한-메모리-확보&quot;&gt;&lt;a href=&quot;#2-%EC%B4%88%EA%B8%B0%ED%99%94%EB%8B%A8%EA%B3%84--%EB%B3%80%EC%88%98%EA%B0%9D%EC%B2%B4%EC%97%90-%EB%93%B1%EB%A1%9D%EB%90%9C-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%9C%84%ED%95%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%ED%99%95%EB%B3%B4&quot; aria-label=&quot;2 초기화단계  변수객체에 등록된 변수를 위한 메모리 확보 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 초기화단계 : 변수객체에 등록된 변수를 위한 메모리 확보&lt;/h4&gt;
&lt;p&gt;사람이 맨 땅에 살 수 없잖아요.. 집이 필요하죠!!! 변수가 들어갈 집을 짓는거에요.
근데 사람이 입주를 안해서 집이 비어있어요. 집주인이 정해지지 않아서 undefined 상태인거에요.&lt;/p&gt;
&lt;h4 id=&quot;3-할당단계--undefined로-초기화된-변수에-실제-값을-할당&quot;&gt;&lt;a href=&quot;#3-%ED%95%A0%EB%8B%B9%EB%8B%A8%EA%B3%84--undefined%EB%A1%9C-%EC%B4%88%EA%B8%B0%ED%99%94%EB%90%9C-%EB%B3%80%EC%88%98%EC%97%90-%EC%8B%A4%EC%A0%9C-%EA%B0%92%EC%9D%84-%ED%95%A0%EB%8B%B9&quot; aria-label=&quot;3 할당단계  undefined로 초기화된 변수에 실제 값을 할당 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. 할당단계 : undefined로 초기화된 변수에 실제 값을 할당&lt;/h4&gt;
&lt;p&gt;집주인이 부동산이랑 계약해서 집을 샀어요. 이제 변수에 실질적인 집주인이 생긴거죠 하하~&lt;/p&gt;
&lt;p&gt;영어에서도 am, are,is 있듯이 변수 선언에서도 &lt;code class=&quot;language-text&quot;&gt;var&lt;/code&gt;,&lt;code class=&quot;language-text&quot;&gt;let&lt;/code&gt;,&lt;code class=&quot;language-text&quot;&gt;const&lt;/code&gt; 세 가지를 선언자로 이용하는데요.&lt;code class=&quot;language-text&quot;&gt;let&lt;/code&gt;이나 &lt;code class=&quot;language-text&quot;&gt;const&lt;/code&gt;는 3단계 순서를 잘 따르는데, &lt;code class=&quot;language-text&quot;&gt;var&lt;/code&gt;는 쫌 달라요. 예를 들어볼게요!&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;console.log(&amp;#39;첫번째 &amp;#39; + waffle) // Reference Error. waffle is not defined
let waffle = &amp;#39;맛있다&amp;#39;
console.log(&amp;#39;두번째 &amp;#39; + waffle)// Reference Error. waffle is not defined&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;첫번째 줄에서 waffle을 선언하기 전에 콘솔을 찍었기 때문에 &lt;code class=&quot;language-text&quot;&gt;ReferenceError: waffle is not defined&lt;/code&gt; 라는 에러가 발생합니다.
두번째 줄에서 waffle이라는 변수에 ‘맛있다’라는 값을 줬지만, 여전히 콘솔을 찍어보면 오류가 발생합니다. let이나 const로 변수를 초기화(2단계)하기 이전에 콘솔로 변수를 호출하면 TDZ(일시적 사각지대)에 빠져서 에러가 발생해욧..
에러가 생기니까 이게 안 좋은것 같아 보이지만, 오히려 이 에러가 덕분에 어디가 틀렸는지 아니깐 코드를 보수하기 더 쉬워진다는 거!&lt;/p&gt;
&lt;p&gt;이번엔 &lt;code class=&quot;language-text&quot;&gt;var&lt;/code&gt;를 살펴봅시다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;console.log(&amp;#39;첫번째 &amp;#39; + waffle) // Reference Error. waffle is not defined&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;waffle을 &lt;code class=&quot;language-text&quot;&gt;var&lt;/code&gt;로 선언하기 이전에 콘솔에 waffle을 찍으면 당연 오류가 나겠죠?
이번에는 콘솔을 지우지 않은 채로 바로 밑에다가 &lt;code class=&quot;language-text&quot;&gt;var waffle=&amp;#39;맛있다&amp;#39;&lt;/code&gt;라고 선언을 해볼게요.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;var waffle = &amp;#39;맛있다&amp;#39; // &amp;#39;첫번째 undefined&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;그러면 ‘첫번째 undefined’라는 값이 찍힙니다. 원래대로라면 집주인이 나타나기도 전에 집주인 누구냐고 물은거니깐, 에러가 생겨야 하지만, &lt;code class=&quot;language-text&quot;&gt;var&lt;/code&gt;선언자는 1,2단계가 동시에 발생하고, 집주인이 정해지기 전에 undefined라는 값이 기본으로 들어가서 집주인 행세를 합니다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;console.log(&amp;#39;두번째 &amp;#39; + waffle) // &amp;#39;두번째 맛있다&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;세번째 줄에 다시 콘솔을 찍어보면 waffle에 맛있다 라는 값이 입주하게 되는거죠!
여기서 잠깐, 변수 선언도 전에 console을 찍은 두번째는 어찌하여 undefined라는 값이 나왔냐? 이건 &lt;code class=&quot;language-text&quot;&gt;var&lt;/code&gt;의 성질인 호이스팅 때문에 발생한 일인데요!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;호이스팅 : 변수선언을 제일 위로 끌어올리는 현상.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이건 밑에서 잠깐 짚고 넘어갈거에요.
여튼..&lt;code class=&quot;language-text&quot;&gt;let&lt;/code&gt;과 &lt;code class=&quot;language-text&quot;&gt;const&lt;/code&gt;가 최신 문법이니 최대한 이걸 씁시다. 얘네를 쓰면 var로 인한 오류가 줄어서 더 편해요~
&lt;code class=&quot;language-text&quot;&gt;var&lt;/code&gt;는 최대한 사용을 지양합시다!
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/163ebce0-b4c8-11e9-b862-790b02766d4c/image.png&quot; alt=&quot;image.png&quot;&gt;
늙은이는 안된다?? ㅎ 그 이유는 아래서 계속… 궁금하죠?ㅋㅋㅋㅋ&lt;/p&gt;
&lt;h2 id=&quot;변수의-유효범위&quot;&gt;&lt;a href=&quot;#%EB%B3%80%EC%88%98%EC%9D%98-%EC%9C%A0%ED%9A%A8%EB%B2%94%EC%9C%84&quot; aria-label=&quot;변수의 유효범위 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;변수의 유효범위&lt;/h2&gt;
&lt;h3 id=&quot;scope유효범위&quot;&gt;&lt;a href=&quot;#scope%EC%9C%A0%ED%9A%A8%EB%B2%94%EC%9C%84&quot; aria-label=&quot;scope유효범위 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scope(유효범위)&lt;/h3&gt;
&lt;p&gt;변수에 접근할 수 있는 범위를 스코프라고 합니다~
떡볶이로 예를 들어볼게요! &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/623fbb30-b4cd-11e9-b862-790b02766d4c/image.png&quot; alt=&quot;image.png&quot;&gt;(또보겠지 떡볶이&amp;#x26;버갈… 죠온맛탱)
우리나라 사람들은 떡볶이 하면 다 알죠?? 근데 음… 저기 안드로메다쯤에 사는 외계인은 지구가 너무 멀기도 하고, 지구에 나라도 많으니깐 한국을 모를수도 있잖아요.
걔한테 백날 떡볶이 맛있어! 너도 먹어봐! 라고 말해봤자 못 알아들어요. 떡볶이가 먹는건지, 입는건지도 모를거 아니에요
외계인의 scope는 안드로메다라서 대한민국에서 선언한 떡볶이를 못알아듣는거죠~&lt;/p&gt;
&lt;p&gt;이러한 스코프에는 &lt;code class=&quot;language-text&quot;&gt;어휘적범위&lt;/code&gt;,&lt;code class=&quot;language-text&quot;&gt;동적범위&lt;/code&gt; 두 종류가 있는데 js는 어휘적 범위(Lexical Scope)를 선택했어요! 이건 코드가 작성될 때 유효범위가 정해지는 거고, 다이나믹은 다이나믹해서 프로그램 실행하면서 정해져요.. 사실 다이나믹 스코프를 겪어보지 못해서 저는 설명못해줘요 고수님들 블로그 참고하세요ㅠㅋㅋ&lt;/p&gt;
&lt;p&gt;여튼… 우리의 동적범위, Lexical은 &lt;code class=&quot;language-text&quot;&gt;전역변수&lt;/code&gt;와&lt;code class=&quot;language-text&quot;&gt;지역변수&lt;/code&gt;로 나뉩니다요.
얘네들을 알아보기 전에 먼저 살펴볼 것. 바로바로 블럭!&lt;/p&gt;
&lt;h3 id=&quot;block&quot;&gt;&lt;a href=&quot;#block&quot; aria-label=&quot;block permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;block&lt;/h3&gt;
&lt;p&gt;함수 예시를 쉽게 만들려다가… 창작의 고통에 빠져서 예전에 정리해놨던 함수를 긁어왔슴다… 하늘색 테두리만 봐주세요!!!!!!
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/a5f7c4f0-b4cb-11e9-8e76-97bd002d6b4f/image.png&quot; alt=&quot;image.png&quot;&gt;
위의 그림에서 보면 함수 전체, for문 안쪽, if문 안쪽에 테두리가 쳐져있죠?
{}요걸로 감싸진 영역! 이 공간들을 자바스크립트 세상에서는 block이라고 불러요.
(저는 사실 for문도 block에 해당하는걸 이번에 처음 알았어요! 와우!!)&lt;/p&gt;
&lt;h3 id=&quot;전역변수와-지역변수&quot;&gt;&lt;a href=&quot;#%EC%A0%84%EC%97%AD%EB%B3%80%EC%88%98%EC%99%80-%EC%A7%80%EC%97%AD%EB%B3%80%EC%88%98&quot; aria-label=&quot;전역변수와 지역변수 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;전역변수와 지역변수&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;전역변수 : block 바깥에서 선언된 변수&lt;/li&gt;
&lt;li&gt;지역변수 : block 안쪽에서 선언된 변수
전역변수의 경우 scope가 전체 코드가 될 것이고, 지역변수는 block 안쪽이에요
예시를 통해 확인해볼까요~~&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;let outer = 123;

{
let outer = 456;
let inner = 456;
}

console.log(outer) // 123
console.log(inner) // Reference Error: inner is not defined&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;여기서 젤 첫번째 줄의 outer가 바로 전역변수에요. block 바깥에서 선언됐죠~
콘솔에 outer를 찍어보면 123이 나옵니다. 왜냐?
두번째 outer는 중괄호 안에서만 활동 가능한 지역변수기 때문이죠!!
inner를 찍어보면 456이라는 숫자 대신, 에러가 뜨는 이유가 바로 그거에요~
inner의 값을 콘솔에 나타내고 싶다면 저 중괄호 안에서 console.log를 찍어주세용&lt;/p&gt;
&lt;h2 id=&quot;하지만-var를-써보면-어떻게-될까요&quot;&gt;&lt;a href=&quot;#%ED%95%98%EC%A7%80%EB%A7%8C-var%EB%A5%BC-%EC%8D%A8%EB%B3%B4%EB%A9%B4-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%90%A0%EA%B9%8C%EC%9A%94&quot; aria-label=&quot;하지만 var를 써보면 어떻게 될까요 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;하.지.만 var를 써보면 어떻게 될까요?&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;var outer = 123;

{
var outer = 456;
var inner = 456;

}

console.log(outer) // 456
console.log(inner) // 456&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;우리가 알고있는 이론과는 달리 둘 다 456이라는 값이 나오게 됩니다.
이것은 호이스팅(hoisting : 끌어올림) 때문에 생기는 일인데요..&lt;/p&gt;
&lt;p&gt;이 부분은 나중에 클로저 정리할 때 다시 자세하게 쓰도록 하겠습니다!!
(지금 할 게 넘넘 많아유 ㅠㅠ)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;오늘의 교훈 : let이나 const 쓰는걸 생활화 하자.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;to고수님들&quot;&gt;&lt;a href=&quot;#to%EA%B3%A0%EC%88%98%EB%8B%98%EB%93%A4&quot; aria-label=&quot;to고수님들 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To.고수님들…&lt;/h2&gt;
&lt;h2 id=&quot;틀린-정보가-있다면-댓글로-의견-주세요-언제든지-적극-반영하겠습니다&quot;&gt;&lt;a href=&quot;#%ED%8B%80%EB%A6%B0-%EC%A0%95%EB%B3%B4%EA%B0%80-%EC%9E%88%EB%8B%A4%EB%A9%B4-%EB%8C%93%EA%B8%80%EB%A1%9C-%EC%9D%98%EA%B2%AC-%EC%A3%BC%EC%84%B8%EC%9A%94-%EC%96%B8%EC%A0%9C%EB%93%A0%EC%A7%80-%EC%A0%81%EA%B7%B9-%EB%B0%98%EC%98%81%ED%95%98%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4&quot; aria-label=&quot;틀린 정보가 있다면 댓글로 의견 주세요 언제든지 적극 반영하겠습니다 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;틀린 정보가 있다면 댓글로 의견 주세요!! 언제든지 적극 반영하겠습니다!&lt;/h2&gt;
&lt;h3 id=&quot;reference&quot;&gt;&lt;a href=&quot;#reference&quot; aria-label=&quot;reference permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;도서 모던자바스크립트 입문&lt;/li&gt;
&lt;li&gt;wecode&lt;/li&gt;
&lt;li&gt;MDN&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[wecode 1주차_3일 TIL_CSS(2)]]></title><description><![CDATA[위코드 3일차 CSS 정리 2탄. list, table, input/textarea에 대해 정리해보았다!]]></description><link>https://gollumnima.github.io//posts/wecode1_3_TIL_css/</link><guid isPermaLink="false">https://gollumnima.github.io//posts/wecode1_3_TIL_css/</guid><pubDate>Wed, 31 Jul 2019 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;DOM으로 빨리 넘어가야 하는데… DOM 너무 무섭고요…
그래서 정리해보는 wecode 1일차 TIL - CSS 2탄! 오늘로 벌써 5일찬데 임시저장 해놓은 1일차 쓰고있슴다..OTL… 시간 넘나 빠른것…&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;오늘의 명언 : 무슨일이 있어도 블로깅은 절대 밀리지 말자!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;list&quot;&gt;&lt;a href=&quot;#list&quot; aria-label=&quot;list permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;List&lt;/h3&gt;
&lt;p&gt;list에서 기억할 것은 &lt;code class=&quot;language-text&quot;&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 그리고&lt;code class=&quot;language-text&quot;&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;과 &lt;code class=&quot;language-text&quot;&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;입니다! 코드와 그림을 먼저 살펴보아요!&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    &amp;lt;ol&amp;gt;
      &amp;lt;li&amp;gt;하나&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;두울&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;세엣&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;네엣&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;다스&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;여스&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;일곱&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;여덟&amp;lt;/li&amp;gt;
    &amp;lt;/ol&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/99ba52e0-b33e-11e9-a5b8-a90d45f2a15e/image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ol : Orderd List의 줄임말로 순서가 있는 list를 만들때 쓰시면 됩니당. 이렇게 번호가 뙇!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/02dde980-b33f-11e9-a50a-67208960cf89/image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ul : UnOrdered List의 줄임말로 순서없이 점 띡! 찍는 list를 만들때 쓰면 돼용&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;근데 리스트 형식인데 점을 없애고 싶다? 그러면 css파일에 &lt;code class=&quot;language-text&quot;&gt;ul {
  list-style: none;
}&lt;/code&gt; 추가고고
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/267bcd30-b33f-11e9-a5b8-a90d45f2a15e/image.png&quot; alt=&quot;image.png&quot;&gt;
짠~ 점들이 없어졌어요 오예!!
근데 가끔 제가 벨로그에 쓰는것처럼&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;이런 효과를 주고 싶다면!! 이것도 가능합니다&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ul {
  list-style: none;
  border-left: 3px solid grey; // 젤 왼쪽에 선 효과 주기
  padding: 15px; // 이걸 안 쓰면 너무 떨어져있게 되니까 적절히 떨어지도록 padding 추가
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/0434f890-b340-11e9-a50a-67208960cf89/image.png&quot; alt=&quot;image.png&quot;&gt;사진을 왼쪽 정렬 하는 방법을 몰라서 그런데, 이거 왼쪽 벽에 딱 붙어있는 이미지랍니다!&lt;/p&gt;
&lt;p&gt;위에서 border는 테두리를 씌우는 걸 말하는데요. 만약에 border-left가 아닌 border로 값을 설정한다면 사방팔방 회색깔 테두리가 씌워질거에요.&lt;/p&gt;
&lt;h3 id=&quot;table&quot;&gt;&lt;a href=&quot;#table&quot; aria-label=&quot;table permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table&lt;/h3&gt;
&lt;p&gt;몰랐는데 CSS로 표도 만들수 있더라고요 대박쓰…!!!!!! 표를 작성하려면 알아둘게 쪼꼼 많아요! &lt;code class=&quot;language-text&quot;&gt;&amp;lt;table&amp;gt;, &amp;lt;thead&amp;gt;, &amp;lt;tbody&amp;gt;, &amp;lt;tr&amp;gt;, &amp;lt;th&amp;gt;, &amp;lt;td&amp;gt;&lt;/code&gt; 하나씩 살펴봅시당&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;table&amp;gt;&lt;/code&gt; : 표 만들땐 젤 바깥쪽을 이 태그로 감싸줍시다~&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; : Table Row의 줄임말. 행의 시작은 이 태그로!&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;th&amp;gt;&lt;/code&gt; : Table Heading의 줄임말. 열의 시작은 이 태그로!&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;td&amp;gt;&lt;/code&gt; : Table Data의 줄임말. 표 안쪽에 내용물은 이 태그로 감싸줍시다~&lt;/li&gt;
&lt;li&gt;셀병합 : colspan이나 rowspan 적절히 사용해보기&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이렇게만 보면 모르겠으니까 실제로 적용해봅시다!&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;     &amp;lt;table class=&amp;quot;border-table&amp;quot;&amp;gt; // 테이블 만들기 시작을 알리는 태그!
      &amp;lt;tr&amp;gt; // 1행 시작
        &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt; // 1열 시작
        &amp;lt;th&amp;gt;1 pm&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;2pm&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;3pm&amp;lt;/th&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt; // 2행 시작
        &amp;lt;th&amp;gt;Gym&amp;lt;/th&amp;gt; //2열 시작
        &amp;lt;td&amp;gt;Dodge ball&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Kick boxing&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Sack racing&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt; // 3행 시작
        &amp;lt;th&amp;gt;Exercise Room&amp;lt;/th&amp;gt; //3열 시작
        &amp;lt;td&amp;gt;Spinning&amp;lt;/td&amp;gt;
        &amp;lt;td class=&amp;quot;gray&amp;quot; colspan=&amp;quot;2&amp;quot;&amp;gt;Yoga marathon&amp;lt;/td&amp;gt; // 열 병합(2칸)
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt; // 4행 시작
        &amp;lt;th&amp;gt;Pool&amp;lt;/th&amp;gt; // 4열 시작
        &amp;lt;td class=&amp;quot;gray&amp;quot; colspan=&amp;quot;3&amp;quot;&amp;gt;Water polo&amp;lt;/td&amp;gt; // 열 병합(3칸)
      &amp;lt;/tr&amp;gt;
    &amp;lt;/table&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;html에서 이렇게 작성하면…&lt;br&gt;
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/45f04a20-b34d-11e9-a63f-3d4fbc7abc6c/image.png&quot; alt=&quot;image.png&quot;&gt;
요로코롬 표를 완성할수 있어요! 진짜 시간표 같고 그럴듯하죠? &lt;/p&gt;
&lt;p&gt;물론 표 안의 색깔이나, 표의 테두리는 다 CSS로 효과를 준거에요&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;  table {
  border-collapse: collapse; // 이걸 안쓰면 표가 조각조각나서 떨어져서 딱 안 붙어있어요~
}

.border-table th,
.border-table td {
  border: 1px solid black; //표 테두리의 굵기와 색깔 입혀주기
}

.gray {
  background-color: gainsboro; //표 칸에 회색으로 색칠해준 것
}```
이렇게 말이죠!
눈팅 금지!! 직접 쳐봐야 좀 더 오래 기억에 남더라구요~~
  
### input과 textarea
둘 다 텍스트를 입력하는 공간이긴 한데 약간의 차이가 있어용
읽어보면 input은 두글자로, textarea 6글자 이상으로 더 길죠?????
짧은 값은 input으로 주고, 긴 값은 textarea로 줍시다..!

* input 타입 알아보기
-type=&amp;quot;text&amp;quot; : 어떠한 텍스트나 입력 가능쓰
-type=&amp;quot;password&amp;quot; : 비번 입력할때 까만 똥그라미 나오는 원리에요! 와우!!!! 씐기씐기!
-type=&amp;quot;number&amp;quot; : 숫자만 입력할 수 있어요. 특수문자 금지!
  
+쁘라스!
placeholder=&amp;quot;아무개&amp;quot; : 이걸 input태그 내에 입력하면 입력전에 아무개라는 글자가 떠요.

![image.png](https://images.velog.io/post-images/dooreplay/9edd6040-b34e-11e9-a50a-67208960cf89/image.png)
로그인할 때 자주 볼 수 있는 풍경이죠? ㅋㅋ

### flex
는 다음 기회에......
미니터 구현한 화면과 함께 공개합니다 두둥!
블로깅이 너무너무너무 많이 밀렸어요~~~ 아이고 나살려~~&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[wecode 1주차_2일 TIL_CSS(1)]]></title><description><![CDATA[위코드 2일차 CSS 정리 1탄. CSS란 Cascading Stytle Sheet의 줄임말로, 다이어리 꾸미기 하듯이 밋밋한 우리의 html을 아름답게 꾸며주는 친구칭구]]></description><link>https://gollumnima.github.io//posts/wecode1_2_TIL_css/</link><guid isPermaLink="false">https://gollumnima.github.io//posts/wecode1_2_TIL_css/</guid><pubDate>Tue, 30 Jul 2019 22:12:03 GMT</pubDate><content:encoded>&lt;h1 id=&quot;csscascading-stytle-sheet&quot;&gt;&lt;a href=&quot;#csscascading-stytle-sheet&quot; aria-label=&quot;csscascading stytle sheet permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSS(Cascading Stytle Sheet)&lt;/h1&gt;
&lt;p&gt;Cascade를 찾아보니 폭포, 쏟아지는 것 뭐 이런 뜻이였는데 뜻에 너무 큰 의미를 두지 맙시다…
우리가 html로 설계도를 짰으면 css로 색칠하고 예쁘게 꾸며주는 작업이 필요해용&lt;/p&gt;
&lt;h3 id=&quot;1-css-적용방법&quot;&gt;&lt;a href=&quot;#1-css-%EC%A0%81%EC%9A%A9%EB%B0%A9%EB%B2%95&quot; aria-label=&quot;1 css 적용방법 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. CSS 적용방법&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;인라인 스타일 :html 태그 안에 직접적으로 적용하는 방법쓰&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;예를 들어, span과 p에 색깔을 입혀볼게요(둘의 차이점을 보여주기 위해 하는 작업쓰)
&lt;code class=&quot;language-text&quot;&gt;&amp;lt;span style=&amp;quot;background-color : skyblue&amp;quot;&amp;gt;곧있으면 점심시간 아싸리&amp;lt;/span&amp;gt;&lt;/code&gt;
&lt;code class=&quot;language-text&quot;&gt;&amp;lt;p style=&amp;quot;background-color : skyblue&amp;quot;&amp;gt;곧있으면 점심시간 아싸리&amp;lt;/p&amp;gt;&lt;/code&gt;
이렇게 치면 어떤 결과가 나올까요&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/b87c11c0-b274-11e9-944d-395be74d9f35/aslkjfd.PNG&quot; alt=&quot;aslkjfd.PNG&quot;&gt;&lt;/p&gt;
&lt;p&gt;인라인 스타일로 글자에 배경색을 입혀봤는데 &lt;code class=&quot;language-text&quot;&gt;span&lt;/code&gt;은 스판끼가 없어서 딱 글자만큼만, &lt;code class=&quot;language-text&quot;&gt;p&lt;/code&gt;는 그 문장 전체에 색을 다 입혀줬슴다
저는 주로 CSS파일을 만들어 쓰는데, 인라인 스타일로 쓰면 적용이 제일 확실하게 된다네요!?
점수제가 있더라고요 몰랐는데 와우…!!!! 고건 밑에서 다시 설명쓰..☆&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Style 태그 :말 그대로 html 내부에 &lt;code class=&quot;language-text&quot;&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 태그 적용하는 것. 이렇게.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    &amp;lt;span&amp;gt;곧있으면 점심시간 아싸리&amp;lt;/span&amp;gt;

    &amp;lt;style&amp;gt;
      span {
        color: #408090;
      }
    &amp;lt;/style&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(아까는 background-color를 입혀서 배경색을 채워줬는데.. 걍 컬러를 쓰면 글자색이 바뀝니당
적용은 이렇게 뙇!)
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/b4c9c4e0-b284-11e9-9878-3be49a983fcd/%EC%BA%A1%EC%B2%98123454.PNG&quot; alt=&quot;캡처123454.PNG&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS 파일 만들기 ☞★강추방법! 젤 깔끔쓰~
우리가 html 파일 만들어줬던것처럼 아무파일명.css 해서 css 파일을 하나 만들어줍시다
CSS 파일을 html에 적용시키려면 ↖너와↘나의↗연결↘고리↗가 필요하겠죠?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;html &lt;code class=&quot;language-text&quot;&gt;&amp;lt;title&amp;gt;&lt;/code&gt; 밑에다가 &lt;code class=&quot;language-text&quot;&gt;&amp;lt;link href=&amp;quot;index.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; /&amp;gt;&lt;/code&gt; 이거 붙여줘용. 링크 흐르엪 옆에다가 만든 css 파일 이름를 써줍니다. 저 태그들은 다 무슨뜻이냐.. 봅시다&lt;/p&gt;
&lt;p&gt;-link : css파일의 링크를 나타내는 태그.
-href : css파일 경로를 나타내는 속성값
-type : link 태그로 연결되는 파일이 뭐신지 알려줌. 항상 type 값은 ‘text/css’래용
-rel : html과 css파일의 관계를 설명한다는데.. 얘도 항상 ‘stylesheet’에용&lt;/p&gt;
&lt;p&gt;그럼 어케 쓰냐.. 작성법은 아래 2번에서 다시~~&lt;/p&gt;
&lt;h3 id=&quot;2-css-작성법&quot;&gt;&lt;a href=&quot;#2-css-%EC%9E%91%EC%84%B1%EB%B2%95&quot; aria-label=&quot;2 css 작성법 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. CSS 작성법&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;selector자리에 태그이름 쓰기
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/08fd24e0-b2c5-11e9-9a46-ed26791597e3/lalala.PNG&quot; alt=&quot;lalala.PNG&quot;&gt;(사진출처 : WECODE Repl.it)
그림을 새로 만들까 하다가… 시간 아끼려고 퍼온 사진쓰…☆ 이해해주시겠져..? 열심히 할게요ㅠㅠ&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;p {
color : yellow;
background-color : black; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;저기 selector 자리에 div나 span,p와 같은 태그 이름을 쓸 수 있어요.
중괄호 열어서 왼쪽에는 주고 싶은 효과 쓰고, 오른쪽에는 그 효과에서 색을 뭘로 줄건지 등등 디테일한 값들을 넣어줍시다~
객체랑 비슷하게 생겼지만 객체처럼 컴마 찍지 말고 땀방울을 찍어주세요. 열심히 CSS로 꾸미면 고생한만큼 땀이 날거 아니에요? ㅎ 기억하세요 땀방울;;;;^^;;;;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;selector자리에 id/class이름 쓰기
id는 #, class는 . 쓰세요~ &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;//chicken이라는 id값을 가진 애한테 글씨색 갈색으로 입혀주기
#chicken{
color: brown;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;//macaron이라는 class값을 가진 애들한테 글씨색 하늘색으로 입혀주기
.macaron{
color: skyblue;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;class는 동명이인이 많으니깐, CSS파일에서 &lt;code class=&quot;language-text&quot;&gt;macaron&lt;/code&gt; 색깔을 하늘색으로 지정해주면, html 나라의 김마카롱, 박마카롱, 최마카롱 등등 오둥이잡둥이 class이름이 마카롱인 친구들은 다 하늘하늘해지겠져~ XD 한방에 작업할수 있으니까 개이득!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;요 밑에서부턴 CSS를 전부 다 정리하려는 욕심을 접고… 제가 자주 헷갈리는 부분들과 중요해 보이는 애들만 정리하겠슴다&lt;/p&gt;
&lt;h3 id=&quot;●-margin과-padding--여백의-미&quot;&gt;&lt;a href=&quot;#%E2%97%8F-margin%EA%B3%BC-padding--%EC%97%AC%EB%B0%B1%EC%9D%98-%EB%AF%B8&quot; aria-label=&quot;● margin과 padding  여백의 미 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;● margin과 padding : 여백의 미&lt;/h3&gt;
&lt;p&gt;둘의 차이를 비교하기 전에 그림을 먼저 보고 가실게요.
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/b518de60-b2c8-11e9-84d6-5f50704416a6/image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;margin : 외부 여백
border : 테두리
padding : 내부 여백&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;이렇게만 보면 쪼꼼 헷갈릴수도 있으니 코드와 그림을 같이 봅시다&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;.one {
  background-color: yellow; //배경 색깔
  text-align: center; // 가운데정렬
  width: 200px; //가로너비
}

.two {
  background-color: paleturquoise;
  text-align: center;
  width: 200px;
}

.three {
  background-color: blue;
  text-align: center;
  width: 200px;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/42f857f0-b32e-11e9-94fc-df00913fc39f/image.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;요런 박스 3개가 있습니다. 이제 효과를 줘볼거에요&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;.one {
  background-color: yellow;
  text-align: center;
  width: 200px;
  margin: 50px 50px;
}

.two {
  background-color: paleturquoise;
  text-align: center;
  width: 200px;
}

.three {
  background-color: blue;
  text-align: center;
  width: 200px;
  padding: 50px 50px;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;one에는 margin을 50px을, two는 가만히 냅뒀고, three에는 padding을 50px 줬어요
과연 결과는????? 두구두구두구두구두구두~
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/e919a3f0-b32e-11e9-a24a-5b58c5102a80/image.png&quot; alt=&quot;image.png&quot;&gt;
1번과 2번은 가로길이는 동일하지만, 1번이 멀찍이 떨어지게 됐어요.
3번은 padding 값을 줘서 크기는 커졌지만, margin값이 없기 때문에 2번과 붙어있져~&lt;/p&gt;
&lt;p&gt;★꿀팁 하나 더!
&lt;code class=&quot;language-text&quot;&gt;.two {
  padding: 10px 20px;
}&lt;/code&gt;이거랑 &lt;code class=&quot;language-text&quot;&gt;.two {
  padding: 10px 20px 10px 20px;
}&lt;/code&gt;이거랑 같다는 사실!
저는 이번에 처음 알았어요 ㅋㅋㅋㅋ 유레카~~
젤 왼쪽부터 순서대로 위↑오른쪽→아래↓왼쪽← 시계방향으로 돌아간다고 생각하심 됩니다!!&lt;/p&gt;
&lt;h3 id=&quot;box-sizing&quot;&gt;&lt;a href=&quot;#box-sizing&quot; aria-label=&quot;box sizing permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;box-sizing&lt;/h3&gt;
&lt;p&gt;아까 세 개의 box를 보면 width는 동일하게 200px로 줬지만 padding값을 준 애는 혼자 너무 커진걸 확인할 수 있었죠! 아직 코딩 병아리라.. 예시가 적절한지는 사실 잘 모르겠어요 ㅠㅠ
여튼… 눈으로 보이는 width와 실제 width가 다를 경우, 우리는 이 사이즈를 맞춰줘야해욧&lt;/p&gt;
&lt;p&gt;각각의 selector에 &lt;code class=&quot;language-text&quot;&gt;box-sizing: border-box;&lt;/code&gt; 이 속성을 추가해줘도 좋지만…
우리가 거대한 웹 페이지를 만들땐 일일히 추가하기 힘들겠져!!!!
그래서 꼼수가 있슴다…
바로 이것이죠 &lt;code class=&quot;language-text&quot;&gt;* {
  box-sizing: border-box;
}&lt;/code&gt;
이렇게 *하고 중괄호 열면 모든 태그에 적용할 수 있다네요! 꼭 알아두셔용 ~.~
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/d6a8ee10-b333-11e9-b6c6-c5c426422d48/image.png&quot; alt=&quot;image.png&quot;&gt;
추가하면 이렇게 모든 박스의 크기가 같아집니다. 우와~~~!&lt;/p&gt;
&lt;h3 id=&quot;상속과-grouping&quot;&gt;&lt;a href=&quot;#%EC%83%81%EC%86%8D%EA%B3%BC-grouping&quot; aria-label=&quot;상속과 grouping permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;상속과 Grouping&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;상속
js에서 prototype에 상속이라는 성질이 있듯이, CSS에도 있습니다!
부모가 가진 스타일을 자식이 물려받는거죠…예시로 확인해볼게요~~&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    &amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;one&amp;quot;&amp;gt;난 자식&amp;lt;/div&amp;gt;
      &amp;lt;div class=&amp;quot;two&amp;quot;&amp;gt;나도 자식&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;p class=&amp;quot;alone&amp;quot;&amp;gt;난 혼자 ㅠㅠ&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;body 태그 안에 이런 애들이 있어요. CSS 값들은 아래와 같이 줘볼게용&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;.parent {
  background-color: blueviolet;
  width: 200px;
}

.one {
}

.two {
}

.alone {
  background-color: gainsboro;
  width: 400px;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;자식들한텐 어떠한 값도 주지 않았고, one과 two를 감싸는 parent라는 class를 가진 div에만 값을 줘봤어요! class가 alone인 div에도 다른 값을 설정해줬구요
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/03ee5e30-b336-11e9-a5b8-a90d45f2a15e/image.png&quot; alt=&quot;image.png&quot;&gt;
결과는 이렇게 뙇! 칫솔 모양이네요. 다들 양치 열심히 하세요! 치과 무섭잖아요
근데 매번 태그마다 값을 일일히 주기 귀찮잖아여.. 값을 다 통일하고 싶다! 그렇땐&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Grouping
그룹으로 묶어버리는 방법이 있어요. 이렇게
&lt;code class=&quot;language-text&quot;&gt;.parent, p {
background-color: blueviolet;
width: 200px;
}&lt;/code&gt; 이렇게 parent div와 p 태그를 ,로 묶어주면
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/7872dbf0-b336-11e9-a63f-3d4fbc7abc6c/image.png&quot; alt=&quot;image.png&quot;&gt;
CSS값이 이렇게 동일하게 먹힙니다! 오오~~&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;css-selector의-우선순위&quot;&gt;&lt;a href=&quot;#css-selector%EC%9D%98-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84&quot; aria-label=&quot;css selector의 우선순위 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSS selector의 우선순위&lt;/h3&gt;
&lt;p&gt;CSS를 작성하는 법 세 가지에 대해서 위에서 다뤄봤는데요, 각 방법마다 일정한 점수가 부여되서 그 점수가 높은 애들이 좀 더 권력자가 될 수 있어요!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;인라인 : 1000점
id : 100점
class:  10점
tag : 1점&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;와우… 저는 인라인 방법이 태그를 더럽힌다고(?) 생각해서 젤 점수가 낮을줄 알았는데 반전쓰..!
근데 우리가 수학자도 아니고.. 점수를 일일히 계산하기보단 그냥 대충 이렇다! 하고 알고있음 좋을 것 같습니다~
지난번에 말했던 것처럼 id를 너무 남발하지만 않는다면 점수는 대충 비슷해질것 같아요!&lt;/p&gt;
&lt;p&gt;예시를 안 보고 넘어가면 섭하겠죠? 먼저 CSS파일엔 이렇게&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;.parent {
  background-color: blueviolet;
  width: 200px;
  font-size: 30px;
}

.alone {
  background-color: gainsboro;
  width: 400px;
  font-size: 30px;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;parent 클래스와 alone 클래스에 모두 font-size 30px이라는 값을 준 상태.
인라인의 권력을 시험해보기 위해 html 태그도 함 볼게요&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    &amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;one&amp;quot;&amp;gt;난 자식&amp;lt;/div&amp;gt;
      &amp;lt;div class=&amp;quot;two&amp;quot;&amp;gt;나도 자식&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;p class=&amp;quot;alone&amp;quot; style=&amp;quot;font-size: 100px;&amp;quot;&amp;gt;난 혼자 ㅠㅠ&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;html바디를 살펴보시면 alone 클래스를 가진 p에 인라인으로 font-size 100px를 줬어요
결과는 과연!!! 두구두구두구두굳구ㅜ둑두구두구~~
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/168e5d40-b338-11e9-a63f-3d4fbc7abc6c/image.png&quot; alt=&quot;image.png&quot;&gt;
분명 CSS에서 같은 글씨 크기로 설정했지만, 100px의 효과를 준 인라인방식이 더 우세한걸 알수 있습니다! 라인을 잘 타라는 말이 괜히 있는게 아니였네요… 무서운 세상!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;포스팅이 너무 길어지는 것 같아 이번판은 여기서 끝! 안그래도 말많은 블로그라 여기서 줄여용
아직도 위코드 1일차 후기가 안 끝났다니… 큰일쓰…☆&lt;/p&gt;</content:encoded></item><item><title><![CDATA[wecode 1주차_1일 TIL_HTML 구성과 tag]]></title><description><![CDATA[위코드 1일차 HTML. Hyper Text Markup Language의 줄임말로, 내가 쓰고 있는 방식인 Markdown과는 반대. 나중에 이 부분에 대해서도 한 차례 정리해볼 생각이다!]]></description><link>https://gollumnima.github.io//posts/wecode1_1_TIL_html/</link><guid isPermaLink="false">https://gollumnima.github.io//posts/wecode1_1_TIL_html/</guid><pubDate>Mon, 29 Jul 2019 22:40:32 GMT</pubDate><content:encoded>&lt;!-- - [html 구조 알아보기](#the-first-transition)
- [html 태그의 종류](#the-digital-age)
- [id와 class](#loss-of-humanity-through-transitions) --&gt;
&lt;p&gt;블로그를 도대체 몇 번이나 갈아타는건지..? 네이버 블로거 시절이 젤 편했는데… 보고픈 잇님덜…☆
이제 나는 본격 개발하는 사람이니깐 이미 만들어진 플랫폼 말고 내가 직접 수정할 수 있는 이 개츠비 블로그를 이용해 글을 써 나갈 예정이다!&lt;/p&gt;
&lt;h3 id=&quot;위코드-1일차-후기훅이&quot;&gt;&lt;a href=&quot;#%EC%9C%84%EC%BD%94%EB%93%9C-1%EC%9D%BC%EC%B0%A8-%ED%9B%84%EA%B8%B0%ED%9B%85%EC%9D%B4&quot; aria-label=&quot;위코드 1일차 후기훅이 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;위코드 1일차 후기훅이&lt;/h3&gt;
&lt;p&gt;오늘은 HTML과 CSS 에 대해서 배웠다.
지난번 코드스테이츠에서 공부할 땐 이 부분을 너무 부실하게 가르쳐줘서 HTML, CSS만 보면 너무 고통스러웠는데.. 적절한 설명과 예시들, 그리고 그때그때 바로 코드 쳐서 실습해볼 수 있는 좋은 환경쓰 굿굿!&lt;/p&gt;
&lt;h2 id=&quot;htmlhyper-text-markup-language&quot;&gt;&lt;a href=&quot;#htmlhyper-text-markup-language&quot; aria-label=&quot;htmlhyper text markup language permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTML(Hyper Text Markup Language)&lt;/h2&gt;
&lt;p&gt;우리는 HTML을 이용해 웹 페이지 구조를 짤 수 있다.
지금 당장 VScode를 열어서 새파일 만들어서 아무파일명.html을 저장. 그다음 첫줄에 &lt;code class=&quot;language-text&quot;&gt;!&lt;/code&gt;를 치고 Tab을 누르시오.
그렇다면 자동완성된 HTML 양식을 확인할 수 있다~&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
    &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;별로 힘들이지 않고 이렇게 순식간에 완성된 우리의 기본 구조!
저기서 꺽쇠 영어 뭐시기… 써 있는걸 태그라고 하는데
기본적으로 태그와 태그 사이에 내용을 쓰고 끄트머리 꺽쇠를 &lt;code class=&quot;language-text&quot;&gt;/&lt;/code&gt;로 닫아준다.
예를들어… &lt;code class=&quot;language-text&quot;&gt;&amp;lt;h1&amp;gt;안녕 여러분!&amp;lt;/h1&amp;gt;&lt;/code&gt; 이런식으로다가 뙇!
(태그는 아래쪽에서 좀 더 자세히 다룰거에요~!)zzzz &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt;: 느낌표를 앞에 써놔서 부정을 뜻할것 같지만 html이라고 명시하는 부분&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;html&amp;gt;&lt;/code&gt;: 브라우저가 인제부터 html 설계도 그려나갈거야~! 라고 명시하는 부분&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt;: 사이트의 제목, 설명, 부가정보,기술정보(모바일인지 아닌지) 등 표시&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;&lt;/code&gt;: 한중일어 포함되어 있다면 utf-8이라는 값으로 문자를 인코딩 해준다는 말씀&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width&amp;quot;&amp;gt;&lt;/code&gt;:디바이스 가로길이가 웹페이지 가로길이와 같다는 말씀. 이걸 빼먹는다면 웹페이지가 축소되서 보이니까 꼭 한번씩 까먹고 써보지 맙시다~&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;title&amp;gt;&lt;/code&gt; : 브라우저에 보이는 탭 이름. 크롬탭에 뭐라고 써있는지 큰소리로 읽어보아요&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; : 젤 중요한 부분. 여기에 페이지에 보이는 뼈대와 내용을 작성쓰~&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-태그&quot;&gt;&lt;a href=&quot;#2-%ED%83%9C%EA%B7%B8&quot; aria-label=&quot;2 태그 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 태그&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;h1&amp;gt;~&amp;lt;h5&amp;gt;&lt;/code&gt; : header의 줄임말. 머리로 박치기 하는거 말고! &lt;code class=&quot;language-text&quot;&gt;&amp;lt;h1&amp;gt;배고파&amp;lt;/h1&amp;gt;&lt;/code&gt; 이런 식으로 h1부터 h5까지 써보시오. h1과 h5 중에 뭐가 더 클까요?? 쳐보세요 ^^ 코드는 실전입니다 크크&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt; : 딱 글자 쓴 만큼까지만 공간을 차지하는 애. 이름은 스판이지만, 전혀 스판끼 없는 애임. 쫙쫙 안 늘어나고 딱 그 글자만큼만!&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt; : paragraph의 약자… 맞나? 아니면 나중에 수정하겠음. 여튼 문장단위의 공간을 차지하는 애. 위의 &lt;code class=&quot;language-text&quot;&gt;span&lt;/code&gt;과는 달리 줄바꿈 가능쓰~
(span과 p를 구분하려면 CSS를 손보면 되는데.. 배고프고 졸리니까 다음시간에…)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; : anchor의 약자. 해적선이 목적지에 도착하면 닻을 내리는 것처럼 얘도 접속하고픈 링크를 찍으면 글로 이동시켜준다!
&lt;code class=&quot;language-text&quot;&gt;&amp;lt;a href=&amp;quot;https://www.w3schools.com/tags/tag_div.asp&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;
고대로 가져온 예시… href는 Hypertext Reference의 줄임말. 예시처럼 링크는 흐르에프는~ 하고 따옴표 안에 링크를 구겨넣어줍시다. 옆에 target엔 &lt;code class=&quot;language-text&quot;&gt;_blank&lt;/code&gt;라고 되어있는데, 저걸 써줘야 새창에 뜹니다.. 마우스 우클릭 새탭으로 열기 안해도 되니까 을매나 좋게요?&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; : division의 줄임말. 젤 중요한 애! 한 뭉텅이로 묶어주는 태그라고 보시면 됩니다.. 얘를 잘 쪼개고 묶어주는게 html 틀 짜는데 또 굉장히 중요하져!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;div에 대해 설명하기 위해 제가 만든 허접한 넷플릭스 화면과 창피한 html 구조를 공유합니다.. 절대 이렇게 따라하지 마씨오.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/e74b1070-b268-11e9-a100-45a09e59a09a/%EB%A9%94%EC%9D%B8%EC%93%B0.PNG&quot; alt=&quot;메인쓰.PNG&quot;&gt;&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/e2bd4af0-b268-11e9-a100-45a09e59a09a/%EB%A9%94%EC%9D%B8%EC%95%84%EB%9E%98%EC%93%B0.PNG&quot; alt=&quot;메인아래쓰.PNG&quot;&gt;&lt;/p&gt;
&lt;p&gt;이렇게 보면 약간 그럴듯은 해보이긴 하는데… 코드를 보면 또르륽…&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; media=&amp;quot;screen&amp;quot; href=&amp;quot;bar.css&amp;quot;&amp;gt;
    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; media=&amp;quot;screen&amp;quot; href=&amp;quot;main.css&amp;quot;&amp;gt;
    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; media=&amp;quot;screen&amp;quot; href=&amp;quot;prize.css&amp;quot;&amp;gt;
    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; media=&amp;quot;screen&amp;quot; href=&amp;quot;best.css&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Dooflix&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body bgcolor=&amp;quot;black&amp;quot;&amp;gt;
  &amp;lt;div id=&amp;#39;entire_wrap&amp;#39;&amp;gt;
      &amp;lt;div id=&amp;#39;black_bar&amp;#39;&amp;gt;
          &amp;lt;img id=&amp;#39;logo&amp;#39; src=&amp;#39;logo.png&amp;#39;&amp;gt;
          &amp;lt;div id=&amp;#39;bar_left&amp;#39;&amp;gt;
            &amp;lt;span id=&amp;#39;home&amp;#39;&amp;gt;홈&amp;lt;/span&amp;gt;
            &amp;lt;span id=&amp;#39;tv&amp;#39;&amp;gt;TV프로그램&amp;lt;/span&amp;gt;
            &amp;lt;span id=&amp;#39;movie&amp;#39;&amp;gt;영화&amp;lt;/span&amp;gt;
            &amp;lt;span id=&amp;#39;new&amp;#39;&amp;gt;최신등록콘텐츠&amp;lt;/span&amp;gt;
            &amp;lt;span id=&amp;#39;love&amp;#39;&amp;gt;내가찜한콘텐츠&amp;lt;/span&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div id=&amp;#39;bar_right&amp;#39;&amp;gt;
          &amp;lt;img id=&amp;#39;glass&amp;#39; src=&amp;#39;glass.png&amp;#39;&amp;gt;
          &amp;lt;span id=&amp;#39;kids&amp;#39;&amp;gt;키즈&amp;lt;/span&amp;gt;
          &amp;lt;img id=&amp;#39;dingdong&amp;#39; src=&amp;#39;dingdong.png&amp;#39;&amp;gt;
          &amp;lt;img id=&amp;#39;profile&amp;#39; src=&amp;#39;profile.png&amp;#39;&amp;gt;
          &amp;lt;img id=&amp;#39;semo&amp;#39; src=&amp;#39;semo.png&amp;#39;&amp;gt;
          &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;div id=&amp;#39;main_ad&amp;#39;&amp;gt;
          &amp;lt;img id=&amp;#39;strange&amp;#39; src=&amp;#39;stranger_things.png&amp;#39;&amp;gt;
          &amp;lt;img id=&amp;#39;n_series&amp;#39; src=&amp;#39;word_n.png&amp;#39;&amp;gt;
          &amp;lt;img id=&amp;#39;stranger_title&amp;#39; src=&amp;#39;strangers.png&amp;#39;&amp;gt;
          &amp;lt;div id=&amp;#39;series&amp;#39;&amp;gt;시리즈&amp;lt;/div&amp;gt;
          &amp;lt;div id=&amp;#39;english_title&amp;#39;&amp;gt;STRANGER THINGS&amp;lt;/div&amp;gt;
          &amp;lt;div id=&amp;#39;play_box&amp;#39;&amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;div id=&amp;#39;contents_box&amp;#39;&amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;div onmouseover=&amp;#39;play_over()&amp;#39; onmouseout=&amp;#39;play_out()&amp;#39; id=&amp;#39;play&amp;#39;&amp;gt;▶ 재생&amp;lt;/div&amp;gt;
          &amp;lt;div onmouseover=&amp;#39;contents_over()&amp;#39; onmouseout=&amp;#39;contents_out()&amp;#39; id=&amp;#39;contents_loved&amp;#39;&amp;gt;╂ 내가 찜한 콘텐츠&amp;lt;/div&amp;gt;
          &amp;lt;div id=&amp;#39;story1&amp;#39;&amp;gt;시즌 3, 지금 시청하세요&amp;lt;/div&amp;gt;
          &amp;lt;div id=&amp;#39;story2&amp;#39;&amp;gt;또다시 기묘한 일들이 일어난다. 정부가 숨기고 있는 비밀,&amp;lt;br&amp;gt;
          정체를 드러내는 그림자, 두려움을 모르는 아이들. 작은&amp;lt;br&amp;gt;
          마을에 어둠이 다가온다. 뒤집힌 세상의 문이 열린다.&amp;lt;/div&amp;gt;
          &amp;lt;img id=&amp;#39;refresh&amp;#39; src=&amp;#39;refreshNew.png&amp;#39;&amp;gt;
          &amp;lt;img id=&amp;#39;se15&amp;#39; src=&amp;#39;15se.png&amp;#39;&amp;gt;
          &amp;lt;div id=&amp;#39;old&amp;#39;&amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;div id=&amp;#39;old_bar&amp;#39;&amp;gt;┃&amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;div id=oversea&amp;gt;외국 TV 프로그램&amp;lt;/div&amp;gt;
      &amp;lt;div class=&amp;#39;container&amp;#39;&amp;gt;
        &amp;lt;div class=&amp;#39;row&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster0&amp;#39; src=&amp;#39;home.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster1&amp;#39; src=&amp;#39;grace.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster2&amp;#39; src=&amp;#39;kimi.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster3&amp;#39; src=&amp;#39;redhair.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster4&amp;#39; src=&amp;#39;taco.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster5&amp;#39; src=&amp;#39;body.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster6&amp;#39; src=&amp;#39;gossip.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster7&amp;#39; src=&amp;#39;lululu.png&amp;#39;&amp;gt;
        &amp;lt;/div&amp;gt;        
      &amp;lt;/div&amp;gt;
      &amp;lt;div id=now&amp;gt;지금 뜨는 콘텐츠&amp;lt;/div&amp;gt;
      &amp;lt;div class=&amp;#39;container&amp;#39;&amp;gt;
        &amp;lt;div class=&amp;#39;row&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster0&amp;#39; src=&amp;#39;hanji.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster1&amp;#39; src=&amp;#39;bingbang.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster2&amp;#39; src=&amp;#39;friends.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster3&amp;#39; src=&amp;#39;himym.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster4&amp;#39; src=&amp;#39;lucifer.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster5&amp;#39; src=&amp;#39;ant.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster6&amp;#39; src=&amp;#39;alive.png&amp;#39;&amp;gt;
          &amp;lt;img class=&amp;#39;poster7&amp;#39; src=&amp;#39;meju.png&amp;#39;&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;script src=&amp;quot;script.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;저처럼 div id를 이렇게 남발하면 안됩니다…  젤 바깥쪽 묶는 div만 id로 하고 웬만하면 그 아랫것들(?)은 class로 묶어주세요… 현업에서도 id를 잘 안 쓴다고 하네요!!&lt;/p&gt;
&lt;h2 id=&quot;3-id와-class&quot;&gt;&lt;a href=&quot;#3-id%EC%99%80-class&quot; aria-label=&quot;3 id와 class permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. id와 class&lt;/h2&gt;
&lt;p&gt;html로 구조를 짜면서 똑같은 태그를 여러번 쓰게 될텐데, id나 class 같은 애들을 통해서 이름표를 붙여줘야 헷갈리지 않겠죠~?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id : 우리가 복제인간이 아닌 이상 신분증은 이 세상에 단 하나밖에 없죠!!! 그런것처럼 id도 무조건 하나만… 만약에 &lt;code class=&quot;language-text&quot;&gt;&amp;lt;div id=&amp;#39;hungry&amp;#39;&amp;gt;&lt;/code&gt; 이런식으로 div에 hungry라는 id를 줬으면 그 다음에 div에 또 hungry라는 이름을 붙여줄 수 없음! 그리고 주의사항… id를 너무 남발하면 안 좋다고 하니 젤 바깥쪽 뭉텅이의 div들에게만 아이디를 줍시다… 나머지는 어쩌냐고? 밑에를 보세요!&lt;/li&gt;
&lt;li&gt;class : id와는 달리 이 구역의 융통성 甲 of 甲. 어떤 태그든 같은 class 이름 여러번 쓰기 가능쓰~ 이게 바로 클래쓰의 차이인가!! 예를들어…
&lt;code class=&quot;language-text&quot;&gt;&amp;lt;div class=&amp;quot;chicken&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;
&lt;code class=&quot;language-text&quot;&gt;&amp;lt;p class=&amp;quot;chicken&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt;
이런식으로 치킨 두번이상 쓰기 가능쓰~ 치느님은 위대해…&lt;/li&gt;
&lt;li&gt;여러 속성 쓰기 : 걍 예시를 먼저 봅시다
&lt;code class=&quot;language-text&quot;&gt;&amp;lt;div id=&amp;quot;profile&amp;quot; class=&amp;quot;content-wrap&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;
&lt;code class=&quot;language-text&quot;&gt;&amp;lt;img src=&amp;quot;./hi.png&amp;quot; alt=&amp;quot;내사진&amp;quot; &amp;gt;&lt;/code&gt;
힘들어서 그대로 가져온 예시… 이런것처럼 id와 class를 동시에 쓰기도 가능쓰…
속성 여러개 쓰려면 profile과 class 사이가 멀어진것처럼 띄어쓰기 하나 해주긔&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;블로그 주인장은 배고프고, 졸립고, 내일도 코딩 달려야해서 이만 잡니다~~ 내일도 열심히 정리해야지!
&lt;img src=&quot;https://images.velog.io/post-images/dooreplay/7a581430-b219-11e9-a4ce-730fc6b3757a/KakaoTalk20190730005626883.jpg&quot; alt=&quot;KakaoTalk_20190730_005626883.jpg&quot;&gt;(선릉 위워크 2호점에는 이렇게 예쁜 네온사인들이 많아서 힙하고 또 힙하다 ㅎ)&lt;/p&gt;</content:encoded></item></channel></rss>